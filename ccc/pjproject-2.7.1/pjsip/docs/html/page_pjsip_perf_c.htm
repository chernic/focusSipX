<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Samples: pjsip-perf - SIP Performance Benchmarking Tool ()</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; PJSIP Reference</p>
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','Search');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Samples: pjsip-perf - SIP Performance Benchmarking Tool </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>This sample contains a complete implementation of a SIP performance measurement tool. Unlike other tool such SIPp, pjsip-perf is geared more towards finding the performance of an endpoint by flooding the endpoint with some requests and time the completion of the requests.</p>
<p>The source code of the file is pjsip-apps/src/samples/pjsip-perf.c</p>
<p>Screenshots on Linux console: </p><div class="image">
<img src="pjsip-perf.jpg" alt="pjsip-perf.jpg"/>
</div>
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* $Id: pjsip-perf.c 5535 2017-01-19 10:31:38Z riza $ */</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* </span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * This program is free software; you can redistribute it and/or modify</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * it under the terms of the GNU General Public License as published by</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * (at your option) any later version.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * This program is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * GNU General Public License for more details.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * along with this program; if not, write to the Free Software</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">/* Include all headers. */</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#include &lt;pjsip.h&gt;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include &lt;pjmedia.h&gt;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#include &lt;pjmedia-codec.h&gt;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#include &lt;pjsip_ua.h&gt;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pjsip__simple_8h.htm">pjsip_simple.h</a>&gt;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#include &lt;pjlib-util.h&gt;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#include &lt;pjlib.h&gt;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#if (defined(PJ_WIN32) &amp;&amp; PJ_WIN32!=0) || (defined(PJ_WIN64) &amp;&amp; PJ_WIN64!=0)</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#  include &lt;windows.h&gt;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#define THIS_FILE           &quot;pjsip-perf.c&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#define DEFAULT_COUNT       (pjsip_cfg()-&gt;tsx.max_count/2&gt;10000?10000:pjsip_cfg()-&gt;tsx.max_count/2)</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#define JOB_WINDOW          1000</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#define TERMINATE_TSX(x,c)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#ifndef CACHING_POOL_SIZE</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#   define CACHING_POOL_SIZE   (256*1024*1024)</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">/* Static message body for INVITE, when stateful processing is</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"> * invoked (instead of call-stateful, where SDP is generated</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"> * dynamically.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">static</span> pj_str_t dummy_sdp_str = </div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;v=0\r\n&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="stringliteral">&quot;o=- 3360842071 3360842071 IN IP4 192.168.0.68\r\n&quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="stringliteral">&quot;s=pjmedia\r\n&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="stringliteral">&quot;c=IN IP4 192.168.0.68\r\n&quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;t=0 0\r\n&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="stringliteral">&quot;m=audio 4000 RTP/AVP 0 8 3 103 102 101\r\n&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;a=rtcp:4001 IN IP4 192.168.0.68\r\n&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="stringliteral">&quot;a=rtpmap:103 speex/16000\r\n&quot;</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;a=rtpmap:102 speex/8000\r\n&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;a=rtpmap:3 GSM/8000\r\n&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="stringliteral">&quot;a=rtpmap:0 PCMU/8000\r\n&quot;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="stringliteral">&quot;a=rtpmap:8 PCMA/8000\r\n&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="stringliteral">&quot;a=sendrecv\r\n&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="stringliteral">&quot;a=rtpmap:101 telephone-event/8000\r\n&quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;a=fmtp:101 0-15\r\n&quot;</span>,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    0</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;};</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">static</span> pj_str_t mime_application = { <span class="stringliteral">&quot;application&quot;</span>, 11};</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">static</span> pj_str_t mime_sdp = {<span class="stringliteral">&quot;sdp&quot;</span>, 3};</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">struct </span>srv_state</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">unsigned</span>        stateless_cnt;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">unsigned</span>        stateful_cnt;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">unsigned</span>        call_cnt;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;};</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">struct </span>app</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    pj_caching_pool      cp;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    pj_pool_t           *pool;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    pj_bool_t            use_tcp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    pj_str_t             local_addr;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">int</span>                  local_port;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a>      *sip_endpt;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    pjmedia_endpt       *med_endpt;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    pj_str_t             local_uri;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    pj_str_t             local_contact;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordtype">unsigned</span>             skinfo_cnt;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    pjmedia_sock_info    skinfo[8];</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    pj_bool_t            thread_quit;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">unsigned</span>             thread_count;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    pj_thread_t         *thread[16];</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    pj_bool_t            real_sdp;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    pjmedia_sdp_session *dummy_sdp;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">int</span>                  log_level;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="structpjsip__method.htm">pjsip_method</a>         method;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        pj_str_t             dst_uri;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        pj_bool_t            stateless;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordtype">unsigned</span>             timeout;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordtype">unsigned</span>             job_count,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                             job_submitted, </div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                             job_finished,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                             job_window;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordtype">unsigned</span>             stat_max_window;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        pj_time_val          first_request;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        pj_time_val          requests_sent;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        pj_time_val          last_completion;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordtype">unsigned</span>             total_responses;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordtype">unsigned</span>             response_codes[800];</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    } client;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        pj_bool_t send_trying;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        pj_bool_t send_ringing;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordtype">unsigned</span> delay;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">struct </span>srv_state prev_state;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keyword">struct </span>srv_state cur_state;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    } server;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;} app;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">struct </span>call</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a>   *inv;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    pj_timer_entry       ans_timer;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;};</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> app_perror(<span class="keyword">const</span> <span class="keywordtype">char</span> *sender, <span class="keyword">const</span> <span class="keywordtype">char</span> *title, </div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                       pj_status_t status)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">char</span> errmsg[PJ_ERR_MSG_SIZE];</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    pj_strerror(status, errmsg, <span class="keyword">sizeof</span>(errmsg));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    PJ_LOG(1,(sender, <span class="stringliteral">&quot;%s: %s [code=%d]&quot;</span>, title, errmsg, status));</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">/**************************************************************************</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"> * STATELESS SERVER</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">static</span> pj_bool_t mod_stateless_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">/* Module to handle incoming requests statelessly.</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">static</span> <a class="code" href="structpjsip__module.htm">pjsip_module</a> mod_stateless_server =</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;{</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    NULL, NULL,                     <span class="comment">/* prev, next.              */</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    { <span class="stringliteral">&quot;mod-stateless-server&quot;</span>, 20 }, <span class="comment">/* Name.                    */</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    -1,                             <span class="comment">/* Id                       */</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c">PJSIP_MOD_PRIORITY_APPLICATION</a>, <span class="comment">/* Priority                 */</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    NULL,                           <span class="comment">/* load()                   */</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    NULL,                           <span class="comment">/* start()                  */</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    NULL,                           <span class="comment">/* stop()                   */</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    NULL,                           <span class="comment">/* unload()                 */</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    &amp;mod_stateless_on_rx_request,   <span class="comment">/* on_rx_request()          */</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    NULL,                           <span class="comment">/* on_rx_response()         */</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    NULL,                           <span class="comment">/* on_tx_request.           */</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    NULL,                           <span class="comment">/* on_tx_response()         */</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    NULL,                           <span class="comment">/* on_tsx_state()           */</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;};</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">static</span> pj_bool_t mod_stateless_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">const</span> pj_str_t stateless_user = { <span class="stringliteral">&quot;0&quot;</span>, 1 };</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="structpjsip__uri.htm">pjsip_uri</a> *uri;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="structpjsip__sip__uri.htm">pjsip_sip_uri</a> *sip_uri;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    uri = <a class="code" href="group__PJSIP__URI__GENERIC.htm#ga4926bf48e30d001e30269e864aba1ecb">pjsip_uri_get_uri</a>(rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#adb6db6523ad2d7a244cf8c5bb95fe9f9">uri</a>);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="comment">/* Only want to receive SIP/SIPS scheme */</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga7c3048e1ef3dbdb6ddd85ab581d926e5">PJSIP_URI_SCHEME_IS_SIP</a>(uri) &amp;&amp; !<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga183cb3d94781c981244b38bfeb46f81f">PJSIP_URI_SCHEME_IS_SIPS</a>(uri))</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    sip_uri = (<a class="code" href="structpjsip__sip__uri.htm">pjsip_sip_uri</a>*) uri;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">/* Check for matching user part */</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">if</span> (pj_strcmp(&amp;sip_uri-&gt;<a class="code" href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">user</a>, &amp;stateless_user)!=0)</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     * Yes, this is for us.</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="comment">/* Ignore ACK request */</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span> (rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#ac3bb3248869a192554dda0b328a10e01">method</a>.<a class="code" href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">id</a> == <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a0e564a7a7fc064ef37547b2d82117372">PJSIP_ACK_METHOD</a>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">     * Respond statelessly with 200/OK.</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a>(app.sip_endpt, rdata, 200, NULL,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                  NULL, NULL);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    app.server.cur_state.stateless_cnt++;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">/**************************************************************************</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"> * STATEFUL SERVER</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">static</span> pj_bool_t mod_stateful_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">/* Module to handle incoming requests statefully.</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">static</span> <a class="code" href="structpjsip__module.htm">pjsip_module</a> mod_stateful_server =</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    NULL, NULL,                     <span class="comment">/* prev, next.              */</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    { <span class="stringliteral">&quot;mod-stateful-server&quot;</span>, 19 },  <span class="comment">/* Name.                    */</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    -1,                             <span class="comment">/* Id                       */</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c">PJSIP_MOD_PRIORITY_APPLICATION</a>, <span class="comment">/* Priority                 */</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    NULL,                           <span class="comment">/* load()                   */</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    NULL,                           <span class="comment">/* start()                  */</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    NULL,                           <span class="comment">/* stop()                   */</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    NULL,                           <span class="comment">/* unload()                 */</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    &amp;mod_stateful_on_rx_request,   <span class="comment">/* on_rx_request()           */</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    NULL,                           <span class="comment">/* on_rx_response()         */</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    NULL,                           <span class="comment">/* on_tx_request.           */</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    NULL,                           <span class="comment">/* on_tx_response()         */</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    NULL,                           <span class="comment">/* on_tsx_state()           */</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;};</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">static</span> pj_bool_t mod_stateful_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">const</span> pj_str_t stateful_user = { <span class="stringliteral">&quot;1&quot;</span>, 1 };</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="structpjsip__uri.htm">pjsip_uri</a> *uri;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="structpjsip__sip__uri.htm">pjsip_sip_uri</a> *sip_uri;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    uri = <a class="code" href="group__PJSIP__URI__GENERIC.htm#ga4926bf48e30d001e30269e864aba1ecb">pjsip_uri_get_uri</a>(rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#adb6db6523ad2d7a244cf8c5bb95fe9f9">uri</a>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="comment">/* Only want to receive SIP/SIPS scheme */</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga7c3048e1ef3dbdb6ddd85ab581d926e5">PJSIP_URI_SCHEME_IS_SIP</a>(uri) &amp;&amp; !<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga183cb3d94781c981244b38bfeb46f81f">PJSIP_URI_SCHEME_IS_SIPS</a>(uri))</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    sip_uri = (<a class="code" href="structpjsip__sip__uri.htm">pjsip_sip_uri</a>*) uri;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="comment">/* Check for matching user part */</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keywordflow">if</span> (pj_strcmp(&amp;sip_uri-&gt;<a class="code" href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">user</a>, &amp;stateful_user)!=0)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">     * Yes, this is for us.</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">     * Respond statefully with 200/OK.</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">switch</span> (rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#ac3bb3248869a192554dda0b328a10e01">method</a>.<a class="code" href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">id</a>) {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a>:</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <a class="code" href="structpjsip__msg__body.htm">pjsip_msg_body</a> *body;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">if</span> (dummy_sdp_str.slen == 0)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                dummy_sdp_str.slen = pj_ansi_strlen(dummy_sdp_str.ptr);</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            body = <a class="code" href="group__PJSIP__MSG__BODY.htm#gaf81cb04a8ccf5f2afca6f69a011d64de">pjsip_msg_body_create</a>(rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#ad7f82eadbaae8b6c22679da94029289d">tp_info</a>.<a class="code" href="structpjsip__rx__data.htm#ab6aa6cf77c7843500dce282f19630890">pool</a>, </div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                         &amp;mime_application, &amp;mime_sdp, </div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                         &amp;dummy_sdp_str);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <a class="code" href="group__PJSIP__TRANSACT__UTIL.htm#ga72b5433f82a2f5893f4f5c3d9b4f1d47">pjsip_endpt_respond</a>(app.sip_endpt, &amp;mod_stateful_server, rdata,</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                200, NULL, NULL, body, NULL);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a0e564a7a7fc064ef37547b2d82117372">PJSIP_ACK_METHOD</a>:</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <a class="code" href="group__PJSIP__TRANSACT__UTIL.htm#ga72b5433f82a2f5893f4f5c3d9b4f1d47">pjsip_endpt_respond</a>(app.sip_endpt, &amp;mod_stateful_server, rdata,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                            200, NULL, NULL, NULL, NULL);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    app.server.cur_state.stateful_cnt++;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">/**************************************************************************</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment"> * CALL SERVER</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keyword">static</span> pj_bool_t mod_call_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">/* Module to handle incoming requests callly.</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keyword">static</span> <a class="code" href="structpjsip__module.htm">pjsip_module</a> mod_call_server =</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;{</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    NULL, NULL,                     <span class="comment">/* prev, next.              */</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    { <span class="stringliteral">&quot;mod-call-server&quot;</span>, 15 },      <span class="comment">/* Name.                    */</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    -1,                             <span class="comment">/* Id                       */</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c">PJSIP_MOD_PRIORITY_APPLICATION</a>, <span class="comment">/* Priority                 */</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    NULL,                           <span class="comment">/* load()                   */</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    NULL,                           <span class="comment">/* start()                  */</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    NULL,                           <span class="comment">/* stop()                   */</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    NULL,                           <span class="comment">/* unload()                 */</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    &amp;mod_call_on_rx_request,        <span class="comment">/* on_rx_request()          */</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    NULL,                           <span class="comment">/* on_rx_response()         */</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    NULL,                           <span class="comment">/* on_tx_request.           */</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    NULL,                           <span class="comment">/* on_tx_response()         */</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    NULL,                           <span class="comment">/* on_tsx_state()           */</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;};</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keyword">static</span> pj_status_t send_response(<a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, </div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                                 <a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata,</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                 <span class="keywordtype">int</span> code,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                 pj_bool_t *has_initial)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;{</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    pj_status_t status;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">if</span> (*has_initial) {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        status = <a class="code" href="group__PJSIP__INV.htm#gad2ec8b6d5c6b02f65c979eea05f82f61">pjsip_inv_answer</a>(inv, code, NULL, NULL, &amp;tdata);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        status = <a class="code" href="group__PJSIP__INV.htm#ga7dbf4062678f4a75c3ba15f5b7a81ebf">pjsip_inv_initial_answer</a>(inv, rdata, code, </div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                          NULL, NULL, &amp;tdata);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <span class="keywordflow">if</span> (*has_initial) {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            status = <a class="code" href="group__PJSIP__INV.htm#gad2ec8b6d5c6b02f65c979eea05f82f61">pjsip_inv_answer</a>(inv, PJSIP_SC_NOT_ACCEPTABLE, </div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                      NULL, NULL, &amp;tdata);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            status = <a class="code" href="group__PJSIP__INV.htm#ga7dbf4062678f4a75c3ba15f5b7a81ebf">pjsip_inv_initial_answer</a>(inv, rdata, </div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                                              PJSIP_SC_NOT_ACCEPTABLE,</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                                              NULL, NULL, &amp;tdata);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordflow">if</span> (status == PJ_SUCCESS) {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            *has_initial = PJ_TRUE;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            <a class="code" href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a>(inv, tdata); </div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <a class="code" href="group__PJSIP__INV.htm#gadd08039422a44bfcad8a9fc09f5d10f7">pjsip_inv_terminate</a>(inv, 500, PJ_FALSE);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        }</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        *has_initial = PJ_TRUE;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        status = <a class="code" href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a>(inv, tdata); </div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <a class="code" href="group__PJSIP__TRANSPORT.htm#gabeec4be34c0a472782b9224c2c7d08f1">pjsip_tx_data_dec_ref</a>(tdata);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        }</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> answer_timer_cb(pj_timer_heap_t *h, pj_timer_entry *entry)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;{</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keyword">struct </span>call *call = entry-&gt;user_data;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    pj_bool_t has_initial = PJ_TRUE;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    PJ_UNUSED_ARG(h);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    entry-&gt;id = 0;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    send_response(call-&gt;inv, NULL, 200, &amp;has_initial);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keyword">static</span> pj_bool_t mod_call_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;{</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keyword">const</span> pj_str_t call_user = { <span class="stringliteral">&quot;2&quot;</span>, 1 };</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="structpjsip__uri.htm">pjsip_uri</a> *uri;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <a class="code" href="structpjsip__sip__uri.htm">pjsip_sip_uri</a> *sip_uri;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keyword">struct </span>call *call;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    pjmedia_sdp_session *sdp;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    pj_bool_t has_initial = PJ_FALSE;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    pj_status_t status;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    uri = <a class="code" href="group__PJSIP__URI__GENERIC.htm#ga4926bf48e30d001e30269e864aba1ecb">pjsip_uri_get_uri</a>(rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#adb6db6523ad2d7a244cf8c5bb95fe9f9">uri</a>);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="comment">/* Only want to receive SIP/SIPS scheme */</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga7c3048e1ef3dbdb6ddd85ab581d926e5">PJSIP_URI_SCHEME_IS_SIP</a>(uri) &amp;&amp; !<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga183cb3d94781c981244b38bfeb46f81f">PJSIP_URI_SCHEME_IS_SIPS</a>(uri))</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    sip_uri = (<a class="code" href="structpjsip__sip__uri.htm">pjsip_sip_uri</a>*) uri;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="comment">/* Only want to handle INVITE requests. */</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordflow">if</span> (rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#ac3bb3248869a192554dda0b328a10e01">method</a>.<a class="code" href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">id</a> != <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a>) {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    }</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="comment">/* Check for matching user part. Incoming requests will be handled </span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment">     * call-statefully if:</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">     *  - user part is &quot;2&quot;, or</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">     *  - user part is not &quot;0&quot; nor &quot;1&quot; and method is INVITE.</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">if</span> (pj_strcmp(&amp;sip_uri-&gt;<a class="code" href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">user</a>, &amp;call_user) == 0 ||</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        sip_uri-&gt;<a class="code" href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">user</a>.slen != 1 ||</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        (*sip_uri-&gt;<a class="code" href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">user</a>.ptr != <span class="charliteral">&#39;0&#39;</span> &amp;&amp; *sip_uri-&gt;<a class="code" href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">user</a>.ptr != <span class="charliteral">&#39;1&#39;</span>))</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    {</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="comment">/* Match */</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    }</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="comment">/* Verify that we can handle the request. */</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keywordflow">if</span> (app.real_sdp) {</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keywordtype">unsigned</span> options = 0;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        status = <a class="code" href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request</a>(rdata, &amp;options, NULL, NULL,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                                          app.sip_endpt, &amp;tdata);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="comment">/*</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">             * No we can&#39;t handle the incoming INVITE request.</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">             */</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordflow">if</span> (tdata) {</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <a class="code" href="structpjsip__response__addr.htm">pjsip_response_addr</a> res_addr;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga5d1406491458eff09be035d6441ff5cf">pjsip_get_response_addr</a>(tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#a0cdb67b05679c1b76812961a6fa7bc02">pool</a>, rdata, &amp;res_addr);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#gad0b30a81c6b26ffd3615a5adcb9bd1f6">pjsip_endpt_send_response</a>(app.sip_endpt, &amp;res_addr, tdata, </div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                                          NULL, NULL);</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                <span class="comment">/* Respond with 500 (Internal Server Error) */</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a>(app.sip_endpt, rdata, 500, NULL,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                                              NULL, NULL);</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        } </div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    }</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="comment">/* Create UAS dialog */</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    status = <a class="code" href="group__PJSIP__DIALOG.htm#ga666cab6ddee2941d4c2f0e3660772bd2">pjsip_dlg_create_uas_and_inc_lock</a>( <a class="code" href="group__PJSUA__UA.htm#gaec6ebe425231e64b6cc47f908e187a1e">pjsip_ua_instance</a>(), rdata,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                                &amp;app.local_contact, &amp;dlg);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keyword">const</span> pj_str_t reason = pj_str(<span class="stringliteral">&quot;Unable to create dialog&quot;</span>);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a>( app.sip_endpt, rdata, </div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                       500, &amp;reason,</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                       NULL, NULL);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    }</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="comment">/* Alloc call structure. */</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    call = pj_pool_zalloc(dlg-&gt;<a class="code" href="structpjsip__dialog.htm#aab6bd0fc8bb4f29bacbf68070bad6c2b">pool</a>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> call));</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="comment">/* Create SDP from PJMEDIA */</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    <span class="keywordflow">if</span> (app.real_sdp) {</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        status = pjmedia_endpt_create_sdp(app.med_endpt, rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#ad7f82eadbaae8b6c22679da94029289d">tp_info</a>.<a class="code" href="structpjsip__rx__data.htm#ab6aa6cf77c7843500dce282f19630890">pool</a>, </div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                          app.skinfo_cnt, app.skinfo, </div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                          &amp;sdp);</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        sdp = app.dummy_sdp;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    }</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    <span class="comment">/* Create UAS invite session */</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    status = <a class="code" href="group__PJSIP__INV.htm#ga446995d30676e2f47279056793756f0e">pjsip_inv_create_uas</a>( dlg, rdata, sdp, 0, &amp;call-&gt;inv);</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <a class="code" href="group__PJSIP__DIALOG.htm#ga4271e64898c6f3822c28fbca07c706b5">pjsip_dlg_create_response</a>(dlg, rdata, 500, NULL, &amp;tdata);</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <a class="code" href="group__PJSIP__DIALOG.htm#ga1a27fb4f5745d3cdd206dfaf28696bfa">pjsip_dlg_send_response</a>(dlg, <a class="code" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga0986013fc64382f90f7d21ecc1efb614">pjsip_rdata_get_tsx</a>(rdata), tdata);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        <a class="code" href="group__PJSIP__DIALOG.htm#ga3283f8502b1df5d37914668338351a4f">pjsip_dlg_dec_lock</a>(dlg);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    }</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    </div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="comment">/* Invite session has been created, decrement &amp; release dialog lock. */</span></div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <a class="code" href="group__PJSIP__DIALOG.htm#ga3283f8502b1df5d37914668338351a4f">pjsip_dlg_dec_lock</a>(dlg);</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="comment">/* Send 100/Trying if needed */</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <span class="keywordflow">if</span> (app.server.send_trying) {</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        status = send_response(call-&gt;inv, rdata, 100, &amp;has_initial);</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordflow">if</span> (status != PJ_SUCCESS)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    }</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="comment">/* Send 180/Ringing if needed */</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="keywordflow">if</span> (app.server.send_ringing) {</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        status = send_response(call-&gt;inv, rdata, 180, &amp;has_initial);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">if</span> (status != PJ_SUCCESS)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    }</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="comment">/* Simulate call processing delay */</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordflow">if</span> (app.server.delay) {</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        pj_time_val delay;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        call-&gt;ans_timer.id = 1;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        call-&gt;ans_timer.user_data = call;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        call-&gt;ans_timer.cb = &amp;answer_timer_cb;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        </div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        delay.sec = 0;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        delay.msec = app.server.delay;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        pj_time_val_normalize(&amp;delay);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <a class="code" href="group__PJSIP__ENDPT.htm#ga404107233ddfd6924432cf62fd6ef036">pjsip_endpt_schedule_timer</a>(app.sip_endpt, &amp;call-&gt;ans_timer, &amp;delay);</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;        <span class="comment">/* Send the 200 response immediately . */</span>  </div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        status = send_response(call-&gt;inv, rdata, 200, &amp;has_initial);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        PJ_ASSERT_ON_FAIL(status == PJ_SUCCESS, <span class="keywordflow">return</span> PJ_TRUE);</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    }</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="comment">/* Done */</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    app.server.cur_state.call_cnt++;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;}</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">/**************************************************************************</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment"> * Default handler when incoming request is not handled by any other</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment"> * modules.</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">static</span> pj_bool_t mod_responder_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata);</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment">/* Module to handle incoming requests statelessly.</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword">static</span> <a class="code" href="structpjsip__module.htm">pjsip_module</a> mod_responder =</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;{</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    NULL, NULL,                     <span class="comment">/* prev, next.              */</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    { <span class="stringliteral">&quot;mod-responder&quot;</span>, 13 },        <span class="comment">/* Name.                    */</span></div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    -1,                             <span class="comment">/* Id                       */</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <a class="code" href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c">PJSIP_MOD_PRIORITY_APPLICATION</a>+1, <span class="comment">/* Priority               */</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    NULL,                           <span class="comment">/* load()                   */</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    NULL,                           <span class="comment">/* start()                  */</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    NULL,                           <span class="comment">/* stop()                   */</span></div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    NULL,                           <span class="comment">/* unload()                 */</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    &amp;mod_responder_on_rx_request,   <span class="comment">/* on_rx_request()          */</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    NULL,                           <span class="comment">/* on_rx_response()         */</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    NULL,                           <span class="comment">/* on_tx_request.           */</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    NULL,                           <span class="comment">/* on_tx_response()         */</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    NULL,                           <span class="comment">/* on_tsx_state()           */</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;};</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="keyword">static</span> pj_bool_t mod_responder_on_rx_request(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;{</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keyword">const</span> pj_str_t reason = pj_str(<span class="stringliteral">&quot;Not expecting request at this URI&quot;</span>);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">     * Respond any requests (except ACK!) with 500.</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keywordflow">if</span> (rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">req</a>.<a class="code" href="structpjsip__request__line.htm#ac3bb3248869a192554dda0b328a10e01">method</a>.<a class="code" href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">id</a> != <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a0e564a7a7fc064ef37547b2d82117372">PJSIP_ACK_METHOD</a>) {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a>(app.sip_endpt, rdata, 500, &amp;reason,</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                                      NULL, NULL);</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    }</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;}</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment">/*****************************************************************************</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment"> * Below is a simple module to log all incoming and outgoing SIP messages</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment">/* Notification on incoming messages */</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="keyword">static</span> pj_bool_t logger_on_rx_msg(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;{</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;RX %d bytes %s from %s %s:%d:\n&quot;</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                         <span class="stringliteral">&quot;%.*s\n&quot;</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                         <span class="stringliteral">&quot;--end msg--&quot;</span>,</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                         rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#ac54fd287cfe134a0efe3ae17b4d51047">len</a>,</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                         <a class="code" href="group__PJSIP__TRANSPORT.htm#ga21fa4df83fe9468f7fc7a9230b1d88ad">pjsip_rx_data_get_info</a>(rdata),</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                         rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#ad7f82eadbaae8b6c22679da94029289d">tp_info</a>.<a class="code" href="structpjsip__rx__data.htm#a4b02ecc5b865805337e553295caf2aea">transport</a>-&gt;<a class="code" href="structpjsip__transport.htm#a61d5ad7902c0be74ce77a9e615ae02f4">type_name</a>,</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                         rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#ab7494eaff96dcdb3830537e869feb4d5">pkt_info</a>.<a class="code" href="structpjsip__rx__data.htm#aa3f886661425441acda38e17c69f53fa">src_name</a>,</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                         rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#ab7494eaff96dcdb3830537e869feb4d5">pkt_info</a>.<a class="code" href="structpjsip__rx__data.htm#a8eca6e9b8aa154930c072e461c82b9e9">src_port</a>,</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                         (<span class="keywordtype">int</span>)rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#ac54fd287cfe134a0efe3ae17b4d51047">len</a>,</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                         rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#aed16618c424cb7c2f9620c2dc2920a91">msg_buf</a>));</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    </div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="comment">/* Always return false, otherwise messages will not get processed! */</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="keywordflow">return</span> PJ_FALSE;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;}</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">/* Notification on outgoing messages */</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="keyword">static</span> pj_status_t logger_on_tx_msg(<a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata)</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;{</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    </div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="comment">/* Important note:</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">     *  tp_info field is only valid after outgoing messages has passed</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">     *  transport layer. So don&#39;t try to access tp_info when the module</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment">     *  has lower priority than transport layer.</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;TX %d bytes %s to %s %s:%d:\n&quot;</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                         <span class="stringliteral">&quot;%.*s\n&quot;</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                         <span class="stringliteral">&quot;--end msg--&quot;</span>,</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                         (tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#afbdf7b29afb599e5e58b1c2b2f3d480b">buf</a>.<a class="code" href="structpjsip__buffer.htm#aa6d9d4e81b0ae2494c4d602e2abe29df">cur</a> - tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#afbdf7b29afb599e5e58b1c2b2f3d480b">buf</a>.<a class="code" href="structpjsip__buffer.htm#a2976093d30aebcb39c5d0214dc14523b">start</a>),</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                         <a class="code" href="group__PJSIP__TRANSPORT.htm#ga06ba51e57f19323087a7bb18c342c55d">pjsip_tx_data_get_info</a>(tdata),</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                         tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#a2eb66221563f9e3eb317562be2da12e9">tp_info</a>.<a class="code" href="structpjsip__tx__data.htm#a5acb7b612a2bc7e17536c9b929fc865c">transport</a>-&gt;<a class="code" href="structpjsip__transport.htm#a61d5ad7902c0be74ce77a9e615ae02f4">type_name</a>,</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                         tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#a2eb66221563f9e3eb317562be2da12e9">tp_info</a>.<a class="code" href="structpjsip__tx__data.htm#a40e612937d52f8467025379594ad638d">dst_name</a>,</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                         tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#a2eb66221563f9e3eb317562be2da12e9">tp_info</a>.<a class="code" href="structpjsip__tx__data.htm#a7e2258b4e83ab4b79c859dc1b647ec48">dst_port</a>,</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                         (<span class="keywordtype">int</span>)(tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#afbdf7b29afb599e5e58b1c2b2f3d480b">buf</a>.<a class="code" href="structpjsip__buffer.htm#aa6d9d4e81b0ae2494c4d602e2abe29df">cur</a> - tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#afbdf7b29afb599e5e58b1c2b2f3d480b">buf</a>.<a class="code" href="structpjsip__buffer.htm#a2976093d30aebcb39c5d0214dc14523b">start</a>),</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                         tdata-&gt;<a class="code" href="structpjsip__tx__data.htm#afbdf7b29afb599e5e58b1c2b2f3d480b">buf</a>.<a class="code" href="structpjsip__buffer.htm#a2976093d30aebcb39c5d0214dc14523b">start</a>));</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="comment">/* Always return success, otherwise message will not get sent! */</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <span class="keywordflow">return</span> PJ_SUCCESS;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;}</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="comment">/* The module instance. */</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="keyword">static</span> <a class="code" href="structpjsip__module.htm">pjsip_module</a> msg_logger = </div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;{</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    NULL, NULL,                         <span class="comment">/* prev, next.          */</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    { <span class="stringliteral">&quot;mod-siprtp-log&quot;</span>, 14 },           <span class="comment">/* Name.                */</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    -1,                                 <span class="comment">/* Id                   */</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <a class="code" href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baabb2b3142e3a34b5f06df57084502ea7b">PJSIP_MOD_PRIORITY_TRANSPORT_LAYER</a>-1,<span class="comment">/* Priority            */</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    NULL,                               <span class="comment">/* load()               */</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    NULL,                               <span class="comment">/* start()              */</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    NULL,                               <span class="comment">/* stop()               */</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    NULL,                               <span class="comment">/* unload()             */</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    &amp;logger_on_rx_msg,                  <span class="comment">/* on_rx_request()      */</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    &amp;logger_on_rx_msg,                  <span class="comment">/* on_rx_response()     */</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    &amp;logger_on_tx_msg,                  <span class="comment">/* on_tx_request.       */</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    &amp;logger_on_tx_msg,                  <span class="comment">/* on_tx_response()     */</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    NULL,                               <span class="comment">/* on_tsx_state()       */</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;};</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">/**************************************************************************</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment"> * Test Client.</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keyword">static</span> pj_bool_t mod_test_on_rx_response(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata);</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> call_on_media_update( <a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv,</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                                  pj_status_t status);</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> call_on_state_changed( <a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, </div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                                   <a class="code" href="structpjsip__event.htm">pjsip_event</a> *e);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> call_on_forked(<a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="code" href="structpjsip__event.htm">pjsip_event</a> *e);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="comment">/* Module to handle incoming requests callly.</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keyword">static</span> <a class="code" href="structpjsip__module.htm">pjsip_module</a> mod_test =</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;{</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    NULL, NULL,                     <span class="comment">/* prev, next.              */</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    { <span class="stringliteral">&quot;mod-test&quot;</span>, 8 },              <span class="comment">/* Name.                    */</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    -1,                             <span class="comment">/* Id                       */</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <a class="code" href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c">PJSIP_MOD_PRIORITY_APPLICATION</a>, <span class="comment">/* Priority                 */</span></div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    NULL,                           <span class="comment">/* load()                   */</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    NULL,                           <span class="comment">/* start()                  */</span></div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    NULL,                           <span class="comment">/* stop()                   */</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    NULL,                           <span class="comment">/* unload()                 */</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    NULL,                           <span class="comment">/* on_rx_request()          */</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    &amp;mod_test_on_rx_response,       <span class="comment">/* on_rx_response()         */</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    NULL,                           <span class="comment">/* on_tx_request.           */</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    NULL,                           <span class="comment">/* on_tx_response()         */</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    NULL,                           <span class="comment">/* on_tsx_state()           */</span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;};</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> report_completion(<span class="keywordtype">int</span> status_code)</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;{</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    app.client.job_finished++;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    <span class="keywordflow">if</span> (status_code &gt;= 200 &amp;&amp; status_code &lt; 800)</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        app.client.response_codes[status_code]++;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    app.client.total_responses++;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    pj_gettimeofday(&amp;app.client.last_completion);</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;}</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">/* Handler when response is received. */</span></div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="keyword">static</span> pj_bool_t mod_test_on_rx_response(<a class="code" href="structpjsip__rx__data.htm">pjsip_rx_data</a> *rdata)</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;{</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga0986013fc64382f90f7d21ecc1efb614">pjsip_rdata_get_tsx</a>(rdata) == NULL) {</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        report_completion(rdata-&gt;<a class="code" href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">msg_info</a>.<a class="code" href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">msg</a>-&gt;<a class="code" href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">line</a>.<a class="code" href="structpjsip__msg.htm#af5dadd6eb8d5ed66f9b17f2f61994101">status</a>.<a class="code" href="structpjsip__status__line.htm#a16eee26aff07ce6ac92764dfb7d63477">code</a>);</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    }</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keywordflow">return</span> PJ_TRUE;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;}</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="comment"> * Create app</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keyword">static</span> pj_status_t create_app(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;{</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    pj_status_t status;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    status = pj_init();</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        app_perror(THIS_FILE, <span class="stringliteral">&quot;Error initializing pjlib&quot;</span>, status);</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    }</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="comment">/* init PJLIB-UTIL: */</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    status = pjlib_util_init();</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="comment">/* Must create a pool factory before we can allocate any memory. */</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    pj_caching_pool_init(&amp;app.cp, &amp;pj_pool_factory_default_policy, </div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                         CACHING_POOL_SIZE);</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <span class="comment">/* Create application pool for misc. */</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    app.pool = pj_pool_create(&amp;app.cp.factory, <span class="stringliteral">&quot;app&quot;</span>, 1000, 1000, NULL);</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="comment">/* Create the endpoint: */</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT.htm#gaf264125f3592f83d0dce3bccf2bd5916">pjsip_endpt_create</a>(&amp;app.cp.factory, pj_gethostname()-&gt;ptr, </div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                                &amp;app.sip_endpt);</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;}</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="comment"> * Init SIP stack</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="keyword">static</span> pj_status_t init_sip()</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;{</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    pj_status_t status = -1;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <span class="comment">/* Add UDP/TCP transport. */</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    {</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        pj_sockaddr_in addr;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        <a class="code" href="structpjsip__host__port.htm">pjsip_host_port</a> addrname;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> *transport_type = NULL;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        pj_bzero(&amp;addr, <span class="keyword">sizeof</span>(addr));</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        addr.sin_family = pj_AF_INET();</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        addr.sin_addr.s_addr = 0;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;        addr.sin_port = pj_htons((pj_uint16_t)app.local_port);</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keywordflow">if</span> (app.local_addr.slen) {</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;            addrname.<a class="code" href="structpjsip__host__port.htm#a821575935d109934b86ae40dacbdec2f">host</a> = app.local_addr;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            addrname.<a class="code" href="structpjsip__host__port.htm#a6fb87164bbfdc7b4d7dcf0b0f4ebcab6">port</a> = 5060;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        } </div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        <span class="keywordflow">if</span> (app.local_port != 0)</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            addrname.<a class="code" href="structpjsip__host__port.htm#a6fb87164bbfdc7b4d7dcf0b0f4ebcab6">port</a> = app.local_port;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        <span class="keywordflow">if</span> (0) {</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="preprocessor">#if defined(PJ_HAS_TCP) &amp;&amp; PJ_HAS_TCP!=0</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (app.use_tcp) {</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            pj_sockaddr_in local_addr;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            <a class="code" href="structpjsip__tpfactory.htm">pjsip_tpfactory</a> *tpfactory;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;            </div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            transport_type = <span class="stringliteral">&quot;tcp&quot;</span>;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            pj_sockaddr_in_init(&amp;local_addr, 0, (pj_uint16_t)app.local_port);</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            status = <a class="code" href="group__PJSIP__TRANSPORT__TCP.htm#ga5c36c000a63c71ea2e01513c4804f925">pjsip_tcp_transport_start</a>(app.sip_endpt, &amp;local_addr,</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                                               app.thread_count, &amp;tpfactory);</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            <span class="keywordflow">if</span> (status == PJ_SUCCESS) {</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                app.local_addr = tpfactory-&gt;<a class="code" href="structpjsip__tpfactory.htm#a542a1f0b35c0642e616fabca73e08694">addr_name</a>.<a class="code" href="structpjsip__host__port.htm#a821575935d109934b86ae40dacbdec2f">host</a>;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                app.local_port = tpfactory-&gt;<a class="code" href="structpjsip__tpfactory.htm#a542a1f0b35c0642e616fabca73e08694">addr_name</a>.<a class="code" href="structpjsip__host__port.htm#a6fb87164bbfdc7b4d7dcf0b0f4ebcab6">port</a>;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;            }</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;            <a class="code" href="structpjsip__transport.htm">pjsip_transport</a> *tp;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            transport_type = <span class="stringliteral">&quot;udp&quot;</span>;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            status = <a class="code" href="group__PJSIP__TRANSPORT__UDP.htm#ga065dd345bde0618c3c7301d3cbc31ac8">pjsip_udp_transport_start</a>(app.sip_endpt, &amp;addr, </div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                                               (app.local_addr.slen ? &amp;addrname:NULL),</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                                               app.thread_count, &amp;tp);</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            <span class="keywordflow">if</span> (status == PJ_SUCCESS) {</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                app.local_addr = tp-&gt;<a class="code" href="structpjsip__transport.htm#a08182142fe120aefe01abc683961bf4c">local_name</a>.<a class="code" href="structpjsip__host__port.htm#a821575935d109934b86ae40dacbdec2f">host</a>;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                app.local_port = tp-&gt;<a class="code" href="structpjsip__transport.htm#a08182142fe120aefe01abc683961bf4c">local_name</a>.<a class="code" href="structpjsip__host__port.htm#a6fb87164bbfdc7b4d7dcf0b0f4ebcab6">port</a>;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            }</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        }</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;            app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to start transport&quot;</span>, status);</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;            <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        }</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        app.local_uri.ptr = pj_pool_alloc(app.pool, 128);</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        app.local_uri.slen = pj_ansi_sprintf(app.local_uri.ptr, </div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;                                             <span class="stringliteral">&quot;&lt;sip:pjsip-perf@%.*s:%d;transport=%s&gt;&quot;</span>,</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;                                             (<span class="keywordtype">int</span>)app.local_addr.slen,</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                                             app.local_addr.ptr,</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                                             app.local_port,</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                                             transport_type);</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        app.local_contact = app.local_uri;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    }</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    <span class="comment">/* </span></div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="comment">     * Init transaction layer.</span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="comment">     * This will create/initialize transaction hash tables etc.</span></div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    status = <a class="code" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga98b6d8edf24b82c6cbc6afbdf274cdf1">pjsip_tsx_layer_init_module</a>(app.sip_endpt);</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    <span class="comment">/*  Initialize UA layer. */</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    status = <a class="code" href="group__PJSUA__UA.htm#ga444b57c13a6e8ac9131bd2c2ff6356ed">pjsip_ua_init_module</a>( app.sip_endpt, NULL );</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="comment">/* Initialize 100rel support */</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    status = <a class="code" href="group__PJSIP__100REL.htm#ga4235c00a7111a1f04e1e75fcc8174744">pjsip_100rel_init_module</a>(app.sip_endpt);</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <span class="comment">/*  Init invite session module. */</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    {</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;        <a class="code" href="structpjsip__inv__callback.htm">pjsip_inv_callback</a> inv_cb;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;        <span class="comment">/* Init the callback for INVITE session: */</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        pj_bzero(&amp;inv_cb, <span class="keyword">sizeof</span>(inv_cb));</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        inv_cb.<a class="code" href="structpjsip__inv__callback.htm#aa56cc5637ee68ea6d7c32f1eb3cbba55">on_state_changed</a> = &amp;call_on_state_changed;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        inv_cb.<a class="code" href="structpjsip__inv__callback.htm#a198399f405e563720c2084dc62a6e2a5">on_new_session</a> = &amp;call_on_forked;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        inv_cb.<a class="code" href="structpjsip__inv__callback.htm#ad3cfa106326745a01c9324581c7d29c8">on_media_update</a> = &amp;call_on_media_update;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;        <span class="comment">/* Initialize invite session module:  */</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        status = <a class="code" href="group__PJSIP__INV.htm#gafd8e278e13d53c78ec6f4dabc2ba2a04">pjsip_inv_usage_init</a>(app.sip_endpt, &amp;inv_cb);</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        PJ_ASSERT_RETURN(status == PJ_SUCCESS, 1);</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    }</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    <span class="comment">/* Register our module to receive incoming requests. */</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>( app.sip_endpt, &amp;mod_test);</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    <span class="comment">/* Register stateless server module */</span></div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>( app.sip_endpt, &amp;mod_stateless_server);</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <span class="comment">/* Register default responder module */</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>( app.sip_endpt, &amp;mod_responder);</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="comment">/* Register stateless server module */</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>( app.sip_endpt, &amp;mod_stateful_server);</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    <span class="comment">/* Register call server module */</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>( app.sip_endpt, &amp;mod_call_server);</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="comment">/* Done */</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    <span class="keywordflow">return</span> PJ_SUCCESS;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;}</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;<span class="comment"> * Destroy SIP</span></div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> destroy_app()</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;{</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    app.thread_quit = 1;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    <span class="keywordflow">for</span> (i=0; i&lt;app.thread_count; ++i) {</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;        <span class="keywordflow">if</span> (app.thread[i]) {</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;            pj_thread_join(app.thread[i]);</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;            pj_thread_destroy(app.thread[i]);</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            app.thread[i] = NULL;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;        }</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    }</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    <span class="keywordflow">if</span> (app.sip_endpt) {</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;        <a class="code" href="group__PJSIP__ENDPT.htm#ga0739d42024587fc86866dd9b24b9dc17">pjsip_endpt_destroy</a>(app.sip_endpt);</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        app.sip_endpt = NULL;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    }</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;    <span class="keywordflow">if</span> (app.pool) {</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;        pj_pool_release(app.pool);</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        app.pool = NULL;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;        PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;Peak memory size: %uMB&quot;</span>,</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                             app.cp.peak_used_size / 1000000));</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        pj_caching_pool_destroy(&amp;app.cp);</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    }</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    <span class="comment">/* Shutdown PJLIB */</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    pj_shutdown();</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;}</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment"> * Init media stack.</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="keyword">static</span> pj_status_t init_media()</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;{</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    <span class="keywordtype">unsigned</span>    i;</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    pj_uint16_t rtp_port;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    pj_status_t status;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;    <span class="comment">/* Initialize media endpoint so that at least error subsystem is properly</span></div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="comment">     * initialized.</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;    status = pjmedia_endpt_create(&amp;app.cp.factory, </div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                                  <a class="code" href="group__PJSIP__ENDPT.htm#gada884870b0a2079339725984bc3a9b0e">pjsip_endpt_get_ioqueue</a>(app.sip_endpt), 0, </div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                                  &amp;app.med_endpt);</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;    <span class="comment">/* Must register all codecs to be supported */</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    pjmedia_codec_register_audio_codecs(app.med_endpt, NULL);</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="comment">/* Init dummy socket addresses */</span></div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    app.skinfo_cnt = 0;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;    <span class="keywordflow">for</span> (i=0, rtp_port=4000; i&lt;PJ_ARRAY_SIZE(app.skinfo); ++i, rtp_port+=2) {</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;        pjmedia_sock_info *skinfo;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;        skinfo = &amp;app.skinfo[i];</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;        </div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;        pj_sockaddr_in_init(&amp;skinfo-&gt;rtp_addr_name.ipv4, &amp;app.local_addr,</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;                            (pj_uint16_t)rtp_port);</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;        pj_sockaddr_in_init(&amp;skinfo-&gt;rtp_addr_name.ipv4, &amp;app.local_addr,</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;                            (pj_uint16_t)(rtp_port+1));</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;        app.skinfo_cnt++;</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    }</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    <span class="comment">/* Generate dummy SDP */</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    dummy_sdp_str.slen = pj_ansi_strlen(dummy_sdp_str.ptr);</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    status = pjmedia_sdp_parse(app.pool, dummy_sdp_str.ptr, dummy_sdp_str.slen, </div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                               &amp;app.dummy_sdp);</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;        app_perror(THIS_FILE, <span class="stringliteral">&quot;Error parsing dummy SDP&quot;</span>, status);</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    }</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    <span class="comment">/* Done */</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    <span class="keywordflow">return</span> PJ_SUCCESS;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;}</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;<span class="comment">/* This is notification from the call about media negotiation</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;<span class="comment"> * status. This is called for client calls only.</span></div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> call_on_media_update( <a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv,</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                                  pj_status_t status)</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;{</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;        <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;        pj_status_t status2;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;        status2 = <a class="code" href="group__PJSIP__INV.htm#ga2a7982ae0f381b057b6c06a99ca87275">pjsip_inv_end_session</a>(inv, PJSIP_SC_UNSUPPORTED_MEDIA_TYPE,</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;                                       NULL, &amp;tdata);</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;        <span class="keywordflow">if</span> (status2 == PJ_SUCCESS &amp;&amp; tdata)</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;            status2 = <a class="code" href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a>(inv, tdata);</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    }</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;}</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">/* This is notification from the call when the call state has changed.</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="comment"> * This is called for client calls only.</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> call_on_state_changed( <a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, </div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;                                   <a class="code" href="structpjsip__event.htm">pjsip_event</a> *e)</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;{</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    PJ_UNUSED_ARG(e);</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    <span class="comment">/* Bail out if the session has been counted before */</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <span class="keywordflow">if</span> (inv-&gt;<a class="code" href="structpjsip__inv__session.htm#aeb5155cf3dab589bcb6663488acdb8b3">mod_data</a>[mod_test.<a class="code" href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">id</a>] != NULL)</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    <span class="comment">/* Bail out if this is not an outgoing call */</span></div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <span class="keywordflow">if</span> (inv-&gt;<a class="code" href="structpjsip__inv__session.htm#a6a3f318cdd8999564a878a26401ff0c6">role</a> != <a class="code" href="sip__types_8h.htm#a1a2637e9a3a7d4cd160dd608c02bf5a9a87ecbe1acc51ef99b226cede50b120ce">PJSIP_UAC_ROLE</a>)</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    <span class="keywordflow">if</span> (inv-&gt;<a class="code" href="structpjsip__inv__session.htm#ab0bd09f668c16bc4e52527952a27c0a7">state</a> == <a class="code" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1caf5c664d1b367a44db04f2cca09f6155b">PJSIP_INV_STATE_CONFIRMED</a>) {</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;        <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;        pj_status_t status;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;        <span class="comment">//report_completion(200);</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;        <span class="comment">//inv-&gt;mod_data[mod_test.id] = (void*)1;</span></div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;        status = <a class="code" href="group__PJSIP__INV.htm#ga2a7982ae0f381b057b6c06a99ca87275">pjsip_inv_end_session</a>(inv, PJSIP_SC_OK, NULL, &amp;tdata);</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;        <span class="keywordflow">if</span> (status == PJ_SUCCESS &amp;&amp; tdata)</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;            status = <a class="code" href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a>(inv, tdata);</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (inv-&gt;<a class="code" href="structpjsip__inv__session.htm#ab0bd09f668c16bc4e52527952a27c0a7">state</a> == <a class="code" href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1caab482bbbe77ed88994a790bd6abcc1c5">PJSIP_INV_STATE_DISCONNECTED</a>) {</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;        report_completion(inv-&gt;<a class="code" href="structpjsip__inv__session.htm#a135700970065ef7dc4c92d34ba0fa78a">cause</a>);</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;        inv-&gt;<a class="code" href="structpjsip__inv__session.htm#aeb5155cf3dab589bcb6663488acdb8b3">mod_data</a>[mod_test.<a class="code" href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">id</a>] = (<span class="keywordtype">void</span>*)(pj_ssize_t)1;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    }</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;}</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;<span class="comment">/* Not implemented for now */</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> call_on_forked(<a class="code" href="structpjsip__inv__session.htm">pjsip_inv_session</a> *inv, <a class="code" href="structpjsip__event.htm">pjsip_event</a> *e)</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;{</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    <span class="comment">/* Do nothing */</span></div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    PJ_UNUSED_ARG(inv);</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    PJ_UNUSED_ARG(e);</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;}</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;<span class="comment"> * Make outgoing call.</span></div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;<span class="keyword">static</span> pj_status_t make_call(<span class="keyword">const</span> pj_str_t *dst_uri)</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;{</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    <span class="keyword">struct </span>call *call;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <a class="code" href="structpjsip__dialog.htm">pjsip_dialog</a> *dlg;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    pjmedia_sdp_session *sdp;</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    pj_status_t status;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    <span class="comment">/* Create UAC dialog */</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    status = <a class="code" href="group__PJSIP__DIALOG.htm#ga6643135a8dbee20a156c1046fda27e03">pjsip_dlg_create_uac</a>( <a class="code" href="group__PJSUA__UA.htm#gaec6ebe425231e64b6cc47f908e187a1e">pjsip_ua_instance</a>(), </div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                                   &amp;app.local_uri,      <span class="comment">/* local URI        */</span></div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                                   &amp;app.local_contact,  <span class="comment">/* local Contact    */</span></div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                                   dst_uri,             <span class="comment">/* remote URI       */</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;                                   dst_uri,             <span class="comment">/* remote target    */</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;                                   &amp;dlg);               <span class="comment">/* dialog           */</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    }</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    <span class="comment">/* Create call */</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;    call = pj_pool_zalloc(dlg-&gt;<a class="code" href="structpjsip__dialog.htm#aab6bd0fc8bb4f29bacbf68070bad6c2b">pool</a>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> call));</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <span class="comment">/* Create SDP */</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <span class="keywordflow">if</span> (app.real_sdp) {</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;        status = pjmedia_endpt_create_sdp(app.med_endpt, dlg-&gt;<a class="code" href="structpjsip__dialog.htm#aab6bd0fc8bb4f29bacbf68070bad6c2b">pool</a>, 1, </div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;                                          app.skinfo, &amp;sdp);</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;        <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;            <a class="code" href="group__PJSIP__DIALOG.htm#ga8ff16237d354ec0f34ea80ba898e9f61">pjsip_dlg_terminate</a>(dlg);</div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;            <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;        }</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;    } <span class="keywordflow">else</span></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        sdp = app.dummy_sdp;</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <span class="comment">/* Create the INVITE session. */</span></div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    status = <a class="code" href="group__PJSIP__INV.htm#ga5a0312d7ff604f9fd7308bbcdb1e08c7">pjsip_inv_create_uac</a>( dlg, sdp, 0, &amp;call-&gt;inv);</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;        <a class="code" href="group__PJSIP__DIALOG.htm#ga8ff16237d354ec0f34ea80ba898e9f61">pjsip_dlg_terminate</a>(dlg);</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;    }</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;    <span class="comment">/* Create initial INVITE request.</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="comment">     * This INVITE request will contain a perfectly good request and </span></div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;<span class="comment">     * an SDP body as well.</span></div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;    status = <a class="code" href="group__PJSIP__INV.htm#ga729c006bbc8076e88ab8337754d2319e">pjsip_inv_invite</a>(call-&gt;inv, &amp;tdata);</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <span class="comment">/* Send initial INVITE request. </span></div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;<span class="comment">     * From now on, the invite session&#39;s state will be reported to us</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;<span class="comment">     * via the invite session callbacks.</span></div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    status = <a class="code" href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a>(call-&gt;inv, tdata);</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    PJ_ASSERT_RETURN(status == PJ_SUCCESS, status);</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    <span class="keywordflow">return</span> PJ_SUCCESS;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;}</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;<span class="comment"> * Verify that valid SIP url is given.</span></div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;<span class="keyword">static</span> pj_status_t verify_sip_url(<span class="keyword">const</span> <span class="keywordtype">char</span> *c_url)</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;{</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    <a class="code" href="structpjsip__uri.htm">pjsip_uri</a> *p;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    pj_pool_t *pool;</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    <span class="keywordtype">char</span> *url;</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    pj_size_t len = (c_url ? pj_ansi_strlen(c_url) : 0);</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    <span class="keywordflow">if</span> (!len) <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    pool = pj_pool_create(&amp;app.cp.factory, <span class="stringliteral">&quot;check%p&quot;</span>, 1024, 0, NULL);</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    <span class="keywordflow">if</span> (!pool) <span class="keywordflow">return</span> PJ_ENOMEM;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    url = pj_pool_alloc(pool, len+1);</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    pj_ansi_strcpy(url, c_url);</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    url[len] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    p = <a class="code" href="group__PJSIP__PARSER.htm#ga48e697c139eb3dfe08fef35fb4823470">pjsip_parse_uri</a>(pool, url, len, 0);</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <span class="keywordflow">if</span> (!p || pj_stricmp2(<a class="code" href="group__PJSIP__URI__GENERIC.htm#ga19b0a14fb7d3f74957cd3fe85d179dcb">pjsip_uri_get_scheme</a>(p), <span class="stringliteral">&quot;sip&quot;</span>) != 0)</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;        p = NULL;</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    pj_pool_release(pool);</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    <span class="keywordflow">return</span> p ? 0 : -1;</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;}</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> usage(<span class="keywordtype">void</span>)</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;{</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;    printf(</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;        <span class="stringliteral">&quot;Usage:\n&quot;</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;        <span class="stringliteral">&quot;   pjsip-perf [OPTIONS]        -- to start as server\n&quot;</span></div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;        <span class="stringliteral">&quot;   pjsip-perf [OPTIONS] URL    -- to call server (possibly itself)\n&quot;</span></div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;        <span class="stringliteral">&quot;where:\n&quot;</span></div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;        <span class="stringliteral">&quot;   URL                     The SIP URL to be contacted.\n&quot;</span></div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;        <span class="stringliteral">&quot;Client options:\n&quot;</span></div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;        <span class="stringliteral">&quot;   --method=METHOD, -m     Set test method (set to INVITE for call benchmark)\n&quot;</span></div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;        <span class="stringliteral">&quot;                           [default: OPTIONS]\n&quot;</span></div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;        <span class="stringliteral">&quot;   --count=N, -n           Set total number of requests to initiate\n&quot;</span></div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;        <span class="stringliteral">&quot;                           [default=%d]\n&quot;</span></div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;        <span class="stringliteral">&quot;   --stateless, -s         Set to operate in stateless mode\n&quot;</span></div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;        <span class="stringliteral">&quot;                           [default: stateful]\n&quot;</span></div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;        <span class="stringliteral">&quot;   --timeout=SEC, -t       Set client timeout [default=60 sec]\n&quot;</span></div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;        <span class="stringliteral">&quot;   --window=COUNT, -w      Set maximum outstanding job [default: %d]\n&quot;</span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;        <span class="stringliteral">&quot;SDP options (client and server):\n&quot;</span></div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;        <span class="stringliteral">&quot;   --real-sdp              Generate real SDP from pjmedia, and also perform\n&quot;</span></div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;        <span class="stringliteral">&quot;                           proper SDP negotiation [default: dummy]\n&quot;</span></div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;        <span class="stringliteral">&quot;Client and Server options:\n&quot;</span></div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;        <span class="stringliteral">&quot;   --local-port=PORT, -p   Set local port [default: 5060]\n&quot;</span></div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;        <span class="stringliteral">&quot;   --use-tcp, -T           Use TCP instead of UDP. Note that when started as\n&quot;</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        <span class="stringliteral">&quot;                           client, you must add ;transport=tcp parameter to URL\n&quot;</span></div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;        <span class="stringliteral">&quot;                           [default: no]\n&quot;</span></div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;        <span class="stringliteral">&quot;   --thread-count=N        Set number of worker threads [default=1]\n&quot;</span></div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;        <span class="stringliteral">&quot;   --trying                Send 100/Trying response (server, default no)\n&quot;</span></div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;        <span class="stringliteral">&quot;   --ringing               Send 180/Ringing response (server, default no)\n&quot;</span></div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;        <span class="stringliteral">&quot;   --delay=MS, -d          Delay answering call by MS (server, default no)\n&quot;</span></div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;        <span class="stringliteral">&quot;Misc options:\n&quot;</span></div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;        <span class="stringliteral">&quot;   --help, -h              Display this screen\n&quot;</span></div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;        <span class="stringliteral">&quot;   --verbose, -v           Verbose logging (put more than once for even more)\n&quot;</span></div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;        <span class="stringliteral">&quot;When started as server, pjsip-perf can be contacted on the following URIs:\n&quot;</span></div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;        <span class="stringliteral">&quot;   - sip:0@server-addr     To handle requests statelessly.\n&quot;</span></div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;        <span class="stringliteral">&quot;   - sip:1@server-addr     To handle requests statefully.\n&quot;</span></div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;        <span class="stringliteral">&quot;   - sip:2@server-addr     To handle INVITE call.\n&quot;</span>,</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;        DEFAULT_COUNT, JOB_WINDOW);</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;}</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;<span class="keyword">static</span> <span class="keywordtype">int</span> my_atoi(<span class="keyword">const</span> <span class="keywordtype">char</span> *s)</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;{</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    pj_str_t ss = pj_str((<span class="keywordtype">char</span>*)s);</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;    <span class="keywordflow">return</span> pj_strtoul(&amp;ss);</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;}</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;<span class="keyword">static</span> pj_status_t init_options(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;{</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    <span class="keyword">enum</span> { OPT_THREAD_COUNT = 1, OPT_REAL_SDP, OPT_TRYING, OPT_RINGING };</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    <span class="keyword">struct </span>pj_getopt_option long_options[] = {</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;        { <span class="stringliteral">&quot;local-port&quot;</span>,     1, 0, <span class="charliteral">&#39;p&#39;</span> },</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;        { <span class="stringliteral">&quot;count&quot;</span>,          1, 0, <span class="charliteral">&#39;c&#39;</span> },</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;        { <span class="stringliteral">&quot;thread-count&quot;</span>,   1, 0, OPT_THREAD_COUNT },</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;        { <span class="stringliteral">&quot;method&quot;</span>,         1, 0, <span class="charliteral">&#39;m&#39;</span> },</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;        { <span class="stringliteral">&quot;help&quot;</span>,           0, 0, <span class="charliteral">&#39;h&#39;</span> },</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        { <span class="stringliteral">&quot;stateless&quot;</span>,      0, 0, <span class="charliteral">&#39;s&#39;</span> },</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;        { <span class="stringliteral">&quot;timeout&quot;</span>,        1, 0, <span class="charliteral">&#39;t&#39;</span> },</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;        { <span class="stringliteral">&quot;real-sdp&quot;</span>,       0, 0, OPT_REAL_SDP },</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;        { <span class="stringliteral">&quot;verbose&quot;</span>,        0, 0, <span class="charliteral">&#39;v&#39;</span> },</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        { <span class="stringliteral">&quot;use-tcp&quot;</span>,        0, 0, <span class="charliteral">&#39;T&#39;</span> },</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;        { <span class="stringliteral">&quot;window&quot;</span>,         1, 0, <span class="charliteral">&#39;w&#39;</span> },</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;        { <span class="stringliteral">&quot;delay&quot;</span>,          1, 0, <span class="charliteral">&#39;d&#39;</span> },</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;        { <span class="stringliteral">&quot;trying&quot;</span>,         0, 0, OPT_TRYING},</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;        { <span class="stringliteral">&quot;ringing&quot;</span>,        0, 0, OPT_RINGING},</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;        { NULL, 0, 0, 0 },</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;    };</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    <span class="keywordtype">int</span> c;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;    <span class="keywordtype">int</span> option_index;</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;    <span class="comment">/* Init default application configs */</span></div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    app.local_port = 5060;</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    app.thread_count = 1;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    app.client.job_count = DEFAULT_COUNT;</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    app.client.method = *<a class="code" href="group__PJSIP__MSG__METHOD.htm#gafdd26e26092275d7f156a0d8efe90b78">pjsip_get_options_method</a>();</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    app.client.job_window = c = JOB_WINDOW;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    app.client.timeout = 60;</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    app.log_level = 3;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    <span class="comment">/* Parse options */</span></div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    pj_optind = 0;</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    <span class="keywordflow">while</span>((c=pj_getopt_long(argc,argv, <span class="stringliteral">&quot;p:c:m:t:w:d:hsv&quot;</span>, </div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;                            long_options, &amp;option_index))!=-1) </div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    {</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;        <span class="keywordflow">switch</span> (c) {</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;p&#39;</span>:</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;            app.local_port = my_atoi(pj_optarg);</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;            <span class="keywordflow">if</span> (app.local_port &lt; 0 || app.local_port &gt; 65535) {</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;                PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;Invalid --local-port %s&quot;</span>, pj_optarg));</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;                <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;            }</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;c&#39;</span>:</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;            app.client.job_count = my_atoi(pj_optarg);</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;            <span class="keywordflow">if</span> (app.client.job_count &gt; <a class="code" href="group__PJSIP__CONFIG.htm#gad4f80a98f2504fdd6542e9bc88c8732b">pjsip_cfg</a>()-&gt;tsx.max_count)</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;                PJ_LOG(3,(THIS_FILE, </div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;                          <span class="stringliteral">&quot;Warning: --count value (%d) exceeds maximum &quot;</span></div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;                          <span class="stringliteral">&quot;transaction count (%d)&quot;</span>, app.client.job_count,</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;                          <a class="code" href="group__PJSIP__CONFIG.htm#gad4f80a98f2504fdd6542e9bc88c8732b">pjsip_cfg</a>()-&gt;tsx.max_count));</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;        <span class="keywordflow">case</span> OPT_THREAD_COUNT:</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;            app.thread_count = my_atoi(pj_optarg);</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;            <span class="keywordflow">if</span> (app.thread_count &lt; 1 || app.thread_count &gt; 16) {</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;                PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;Invalid --thread-count %s&quot;</span>, pj_optarg));</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;                <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;            }</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;m&#39;</span>:</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;            {</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;                pj_str_t temp = pj_str((<span class="keywordtype">char</span>*)pj_optarg);</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;                <a class="code" href="group__PJSIP__MSG__METHOD.htm#ga129244ffaef62fe5d4df27c7f8e61376">pjsip_method_init_np</a>(&amp;app.client.method, &amp;temp);</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;            }</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;h&#39;</span>:</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;            usage();</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;s&#39;</span>:</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;            app.client.stateless = PJ_TRUE;</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;        <span class="keywordflow">case</span> OPT_REAL_SDP:</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;            app.real_sdp = 1;</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;v&#39;</span>:</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;            app.log_level++;</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;t&#39;</span>:</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;            app.client.timeout = my_atoi(pj_optarg);</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;            <span class="keywordflow">if</span> (app.client.timeout &gt; 600) {</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;                PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;Invalid --timeout %s&quot;</span>, pj_optarg));</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;                <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;            }</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;w&#39;</span>:</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;            app.client.job_window = my_atoi(pj_optarg);</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;            <span class="keywordflow">if</span> (app.client.job_window &lt;= 0) {</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;                PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;Invalid --window %s&quot;</span>, pj_optarg));</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;                <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;            }</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;T&#39;</span>:</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;            app.use_tcp = PJ_TRUE;</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>:</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;            app.server.delay = my_atoi(pj_optarg);</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;            <span class="keywordflow">if</span> (app.server.delay &gt; 3600) {</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;                PJ_LOG(3,(THIS_FILE, <span class="stringliteral">&quot;I think --delay %s is too long&quot;</span>, </div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;                          pj_optarg));</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;                <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;            }</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;        <span class="keywordflow">case</span> OPT_TRYING:</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;            app.server.send_trying = 1;</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;        <span class="keywordflow">case</span> OPT_RINGING:</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;            app.server.send_ringing = 1;</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;            PJ_LOG(1,(THIS_FILE, </div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;                      <span class="stringliteral">&quot;Invalid argument. Use --help to see help&quot;</span>));</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;        }</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;    }</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;</div><div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;    <span class="keywordflow">if</span> (pj_optind != argc) {</div><div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;</div><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;        <span class="keywordflow">if</span> (verify_sip_url(argv[pj_optind]) != PJ_SUCCESS) {</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;            PJ_LOG(1,(THIS_FILE, <span class="stringliteral">&quot;Invalid SIP URI %s&quot;</span>, argv[pj_optind]));</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;        }</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;        app.client.dst_uri = pj_str(argv[pj_optind]);</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;        </div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;        pj_optind++;</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;    }</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;    <span class="keywordflow">if</span> (pj_optind != argc) {</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;        PJ_LOG(1,(THIS_FILE, <span class="stringliteral">&quot;Error: unknown options %s&quot;</span>, argv[pj_optind]));</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;    }</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;}</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;<span class="comment">/* Send one stateless request */</span></div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;<span class="keyword">static</span> pj_status_t submit_stateless_job(<span class="keywordtype">void</span>)</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;{</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;    <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;    pj_status_t status;</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga6a5dc2cd5b43a1adf869c9746593f818">pjsip_endpt_create_request</a>(app.sip_endpt, &amp;app.client.method, </div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;                                        &amp;app.client.dst_uri, &amp;app.local_uri,</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;                                        &amp;app.client.dst_uri, &amp;app.local_contact,</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;                                        NULL, -1, NULL, &amp;tdata);</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;        app_perror(THIS_FILE, <span class="stringliteral">&quot;Error creating request&quot;</span>, status);</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;        report_completion(701);</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    }</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga155a9b9dce2138e91605d6b7561d70a3">pjsip_endpt_send_request_stateless</a>(app.sip_endpt, tdata, NULL,</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;                                                NULL);</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;        <a class="code" href="group__PJSIP__TRANSPORT.htm#gabeec4be34c0a472782b9224c2c7d08f1">pjsip_tx_data_dec_ref</a>(tdata);</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;        app_perror(THIS_FILE, <span class="stringliteral">&quot;Error sending stateless request&quot;</span>, status);</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;        report_completion(701);</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    }</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;    <span class="keywordflow">return</span> PJ_SUCCESS;</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;}</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;<span class="comment">/* This callback is called when client transaction state has changed */</span></div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> tsx_completion_cb(<span class="keywordtype">void</span> *token, <a class="code" href="structpjsip__event.htm">pjsip_event</a> *event)</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;{</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    <a class="code" href="structpjsip__transaction.htm">pjsip_transaction</a> *tsx;</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;    PJ_UNUSED_ARG(token);</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;    <span class="keywordflow">if</span> (event-&gt;<a class="code" href="structpjsip__event.htm#a4c9815f5453bf666110018f942243c80">type</a> != <a class="code" href="group__PJSIP__EVENT.htm#gga887dd71c4680ebf9f85ec69fd87b8399a2d5c13b769452ce377081eca204f06f3">PJSIP_EVENT_TSX_STATE</a>)</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;    tsx = <span class="keyword">event</span>-&gt;body.tsx_state.tsx;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    <span class="keywordflow">if</span> (tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a936b7534b429c950b1a1cf96e1616640">mod_data</a>[mod_test.<a class="code" href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">id</a>] != NULL) {</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;        <span class="comment">/* This transaction has been calculated before */</span></div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;    }</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;    <span class="keywordflow">if</span> (tsx-&gt;<a class="code" href="structpjsip__transaction.htm#accf03cc6f6d2c02ae0d7c0814e253629">state</a>==<a class="code" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7af394413f4682ed002b8527de702e8ee9">PJSIP_TSX_STATE_TERMINATED</a>) {</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;        report_completion(tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a54b5b24b1724a9f2a479a9a7f25a406c">status_code</a>);</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;        tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a936b7534b429c950b1a1cf96e1616640">mod_data</a>[mod_test.<a class="code" href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">id</a>] = (<span class="keywordtype">void</span>*)(pj_ssize_t)1;</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;    }</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a2319847333550ff3e8e5d7ae4240cc3e">method</a>.<a class="code" href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">id</a> == <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a> &amp;&amp;</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;             tsx-&gt;<a class="code" href="structpjsip__transaction.htm#accf03cc6f6d2c02ae0d7c0814e253629">state</a> == <a class="code" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7a648a4a0676b3c10cb2fad9f562d3befd">PJSIP_TSX_STATE_CONFIRMED</a>) {</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;        report_completion(tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a54b5b24b1724a9f2a479a9a7f25a406c">status_code</a>);</div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;        tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a936b7534b429c950b1a1cf96e1616640">mod_data</a>[mod_test.<a class="code" href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">id</a>] = (<span class="keywordtype">void</span>*)(pj_ssize_t)1;</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;        </div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (tsx-&gt;<a class="code" href="structpjsip__transaction.htm#accf03cc6f6d2c02ae0d7c0814e253629">state</a> == <a class="code" href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7adea6edaf4e6382e18913d6d98443bea0">PJSIP_TSX_STATE_COMPLETED</a>) {</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;        report_completion(tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a54b5b24b1724a9f2a479a9a7f25a406c">status_code</a>);</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;        tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a936b7534b429c950b1a1cf96e1616640">mod_data</a>[mod_test.<a class="code" href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">id</a>] = (<span class="keywordtype">void</span>*)(pj_ssize_t)1;</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;</div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;        TERMINATE_TSX(tsx, tsx-&gt;<a class="code" href="structpjsip__transaction.htm#a54b5b24b1724a9f2a479a9a7f25a406c">status_code</a>);</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;    }</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;}</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;<span class="comment">/* Send one stateful request */</span></div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;<span class="keyword">static</span> pj_status_t submit_job(<span class="keywordtype">void</span>)</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;{</div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;    <a class="code" href="structpjsip__tx__data.htm">pjsip_tx_data</a> *tdata;</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;    pj_status_t status;</div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;    status = <a class="code" href="group__PJSIP__ENDPT__STATELESS.htm#ga6a5dc2cd5b43a1adf869c9746593f818">pjsip_endpt_create_request</a>(app.sip_endpt, &amp;app.client.method, </div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;                                        &amp;app.client.dst_uri, &amp;app.local_uri,</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;                                        &amp;app.client.dst_uri, &amp;app.local_contact,</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;                                        NULL, -1, NULL, &amp;tdata);</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;        app_perror(THIS_FILE, <span class="stringliteral">&quot;Error creating request&quot;</span>, status);</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;        report_completion(701);</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;        <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;    }</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;    status = <a class="code" href="group__PJSIP__TRANSACT__UTIL.htm#gaa4c9a6482b6077351daf2f7974ae7371">pjsip_endpt_send_request</a>(app.sip_endpt, tdata, -1, NULL, </div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;                                      &amp;tsx_completion_cb);</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;    <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;        app_perror(THIS_FILE, <span class="stringliteral">&quot;Error sending stateful request&quot;</span>, status);</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;        <span class="comment">//should have been reported by tsx_completion_cb().</span></div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;        <span class="comment">//report_completion(701);</span></div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;        <span class="comment">//No longer necessary (r777)</span></div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;        <span class="comment">//pjsip_tx_data_dec_ref(tdata);</span></div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;    }</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;    <span class="keywordflow">return</span> status;</div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;}</div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;<span class="comment">/* Client worker thread */</span></div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;<span class="keyword">static</span> <span class="keywordtype">int</span> client_thread(<span class="keywordtype">void</span> *arg)</div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;{</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    pj_time_val end_time, last_report, now;</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;    <span class="keywordtype">unsigned</span> thread_index = (unsigned)(<span class="keywordtype">long</span>)(pj_ssize_t)arg;</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;    <span class="keywordtype">unsigned</span> cycle = 0, last_cycle = 0;</div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;    pj_thread_sleep(100);</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;    pj_gettimeofday(&amp;end_time);</div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    end_time.sec += app.client.timeout;</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;    pj_gettimeofday(&amp;last_report);</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    <span class="keywordflow">if</span> (app.client.first_request.sec == 0) {</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;        pj_gettimeofday(&amp;app.client.first_request);</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;    }</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    <span class="comment">/* Submit all jobs */</span></div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;    <span class="keywordflow">while</span> (app.client.job_submitted &lt; app.client.job_count &amp;&amp; !app.thread_quit){</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;        pj_time_val timeout = { 0, 1 };</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;        <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;        <span class="keywordtype">int</span> outstanding;</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;        pj_status_t status;</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;        <span class="comment">/* Calculate current outstanding job */</span></div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;        outstanding = app.client.job_submitted - app.client.job_finished;</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;        <span class="comment">/* Update stats on max outstanding jobs */</span></div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;        <span class="keywordflow">if</span> (outstanding &gt; (<span class="keywordtype">int</span>)app.client.stat_max_window)</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;            app.client.stat_max_window = outstanding;</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;        <span class="comment">/* Wait if there are more pending jobs than allowed in the</span></div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;<span class="comment">         * window. But spawn a new job anyway if no events are happening</span></div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;<span class="comment">         * after we wait for some time.</span></div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;        <span class="keywordflow">for</span> (i=0; outstanding &gt; (int)app.client.job_window &amp;&amp; i&lt;1000; ++i) {</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;            pj_time_val wait = { 0, 500 };</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;            <span class="keywordtype">unsigned</span> count = 0;</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;            <a class="code" href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a>(app.sip_endpt, &amp;wait, &amp;count);</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;            outstanding = app.client.job_submitted - app.client.job_finished;</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;            ++cycle;</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;        }</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;</div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;</div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;        <span class="comment">/* Submit one job */</span></div><div class="line"><a name="l01471"></a><span class="lineno"> 1471</span>&#160;        <span class="keywordflow">if</span> (app.client.method.id == <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a>) {</div><div class="line"><a name="l01472"></a><span class="lineno"> 1472</span>&#160;            status = make_call(&amp;app.client.dst_uri);</div><div class="line"><a name="l01473"></a><span class="lineno"> 1473</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (app.client.stateless) {</div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;            status = submit_stateless_job();</div><div class="line"><a name="l01475"></a><span class="lineno"> 1475</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01476"></a><span class="lineno"> 1476</span>&#160;            status = submit_job();</div><div class="line"><a name="l01477"></a><span class="lineno"> 1477</span>&#160;        }</div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;        PJ_UNUSED_ARG(status);</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;</div><div class="line"><a name="l01480"></a><span class="lineno"> 1480</span>&#160;        ++app.client.job_submitted;</div><div class="line"><a name="l01481"></a><span class="lineno"> 1481</span>&#160;        ++cycle;</div><div class="line"><a name="l01482"></a><span class="lineno"> 1482</span>&#160;</div><div class="line"><a name="l01483"></a><span class="lineno"> 1483</span>&#160;        <span class="comment">/* Handle event */</span></div><div class="line"><a name="l01484"></a><span class="lineno"> 1484</span>&#160;        <a class="code" href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a>(app.sip_endpt, &amp;timeout, NULL);</div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;</div><div class="line"><a name="l01486"></a><span class="lineno"> 1486</span>&#160;        <span class="comment">/* Check for time out, also print report */</span></div><div class="line"><a name="l01487"></a><span class="lineno"> 1487</span>&#160;        <span class="keywordflow">if</span> (cycle - last_cycle &gt;= 500) {</div><div class="line"><a name="l01488"></a><span class="lineno"> 1488</span>&#160;            pj_gettimeofday(&amp;now);</div><div class="line"><a name="l01489"></a><span class="lineno"> 1489</span>&#160;            <span class="keywordflow">if</span> (PJ_TIME_VAL_GTE(now, end_time)) {</div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;            }</div><div class="line"><a name="l01492"></a><span class="lineno"> 1492</span>&#160;            last_cycle = cycle;</div><div class="line"><a name="l01493"></a><span class="lineno"> 1493</span>&#160;</div><div class="line"><a name="l01494"></a><span class="lineno"> 1494</span>&#160;            </div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;            <span class="keywordflow">if</span> (thread_index == 0 &amp;&amp; now.sec-last_report.sec &gt;= 2) {</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;                printf(<span class="stringliteral">&quot;\r%d jobs started, %d completed...   &quot;</span>,</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;                       app.client.job_submitted, app.client.job_finished);</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;                fflush(stdout);</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;                last_report = now;</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;            }</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;        }</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;    }</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;    <span class="keywordflow">if</span> (app.client.requests_sent.sec == 0) {</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;        pj_gettimeofday(&amp;app.client.requests_sent);</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;    }</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;    <span class="keywordflow">if</span> (thread_index == 0) {</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;        printf(<span class="stringliteral">&quot;\r%d jobs started, %d completed%s\n&quot;</span>,</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;               app.client.job_submitted, app.client.job_finished,</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;               (app.client.job_submitted!=app.client.job_finished ? </div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;                <span class="stringliteral">&quot;, waiting...&quot;</span> : <span class="stringliteral">&quot;.&quot;</span>) );</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;        fflush(stdout);</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;    }</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;    <span class="comment">/* Wait until all jobs completes, or timed out */</span></div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;    pj_gettimeofday(&amp;now);</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;    <span class="keywordflow">while</span> (PJ_TIME_VAL_LT(now, end_time) &amp;&amp; </div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;           app.client.job_finished &lt; app.client.job_count &amp;&amp; </div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;           !app.thread_quit) </div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;    {</div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;        pj_time_val timeout = { 0, 1 };</div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;        <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;</div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;1000; ++i) {</div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;            <span class="keywordtype">unsigned</span> count;</div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;            count = 0;</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;            <a class="code" href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a>(app.sip_endpt, &amp;timeout, &amp;count);</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;        }</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;</div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;        pj_gettimeofday(&amp;now);</div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;    }</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;    <span class="comment">/* Wait couple of seconds to let jobs completes (e.g. ACKs to be sent)  */</span></div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;    pj_gettimeofday(&amp;now);</div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;    end_time = now;</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;    end_time.sec += 2;</div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;    <span class="keywordflow">while</span> (PJ_TIME_VAL_LT(now, end_time)) </div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;    {</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;        pj_time_val timeout = { 0, 1 };</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;        <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;1000; ++i) {</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;            <span class="keywordtype">unsigned</span> count;</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;            count = 0;</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;            <a class="code" href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a>(app.sip_endpt, &amp;timeout, &amp;count);</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;        }</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;        pj_gettimeofday(&amp;now);</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;    }</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;}</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *good_number(<span class="keywordtype">char</span> *buf, pj_int32_t val)</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;{</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;    <span class="keywordflow">if</span> (val &lt; 1000) {</div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;        pj_ansi_sprintf(buf, <span class="stringliteral">&quot;%d&quot;</span>, val);</div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (val &lt; 1000000) {</div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;        pj_ansi_sprintf(buf, <span class="stringliteral">&quot;%d.%dK&quot;</span>, </div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;                        val / 1000,</div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;                        (val % 1000) / 100);</div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;        pj_ansi_sprintf(buf, <span class="stringliteral">&quot;%d.%02dM&quot;</span>, </div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;                        val / 1000000,</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;                        (val % 1000000) / 10000);</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;    }</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;    <span class="keywordflow">return</span> buf;</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;}</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;<span class="keyword">static</span> <span class="keywordtype">int</span> server_thread(<span class="keywordtype">void</span> *arg)</div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;{</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;    pj_time_val timeout = { 0, 1 };</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;    <span class="keywordtype">unsigned</span> thread_index = (unsigned)(<span class="keywordtype">long</span>)(pj_ssize_t)arg;</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;    pj_time_val last_report, next_report;</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;    pj_gettimeofday(&amp;last_report);</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;    next_report = last_report;</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;    next_report.sec++;</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;    <span class="keywordflow">while</span> (!app.thread_quit) {</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;        pj_time_val now;</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;        <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;100; ++i) {</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;            <span class="keywordtype">unsigned</span> count = 0;</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;            <a class="code" href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a>(app.sip_endpt, &amp;timeout, &amp;count);</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;        }</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;        <span class="keywordflow">if</span> (thread_index == 0) {</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;            pj_gettimeofday(&amp;now);</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;            <span class="keywordflow">if</span> (PJ_TIME_VAL_GTE(now, next_report)) {</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;                pj_time_val tmp;</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;                <span class="keywordtype">unsigned</span> msec;</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;                <span class="keywordtype">unsigned</span> stateless, stateful, call;</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;                <span class="keywordtype">char</span> str_stateless[32], str_stateful[32], str_call[32];</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;                tmp = now;</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;                PJ_TIME_VAL_SUB(tmp, last_report);</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;                msec = PJ_TIME_VAL_MSEC(tmp);</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;                last_report = now;</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;                next_report = last_report;</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;                next_report.sec++;</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;                stateless = app.server.cur_state.stateless_cnt - app.server.prev_state.stateless_cnt;</div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;                stateful = app.server.cur_state.stateful_cnt - app.server.prev_state.stateful_cnt;</div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;                call = app.server.cur_state.call_cnt - app.server.prev_state.call_cnt;</div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;</div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;                good_number(str_stateless, app.server.cur_state.stateless_cnt);</div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;                good_number(str_stateful, app.server.cur_state.stateful_cnt);</div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;                good_number(str_call, app.server.cur_state.call_cnt);</div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;</div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;                printf(<span class="stringliteral">&quot;Total(rate): stateless:%s (%d/s), statefull:%s (%d/s), call:%s (%d/s)       \r&quot;</span>,</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;                       str_stateless, stateless*1000/msec,</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;                       str_stateful, stateful*1000/msec,</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;                       str_call, call*1000/msec);</div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;                fflush(stdout);</div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;</div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;                app.server.prev_state = app.server.cur_state;</div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;            }</div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;        }</div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;    }</div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;}</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> write_report(<span class="keyword">const</span> <span class="keywordtype">char</span> *msg)</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;{</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;    puts(msg);</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;<span class="preprocessor">#if (defined(PJ_WIN32) &amp;&amp; PJ_WIN32!=0) || (defined(PJ_WIN64) &amp;&amp; PJ_WIN64!=0)</span></div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;    OutputDebugString(msg);</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;    OutputDebugString(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;}</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;<span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;{</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">char</span> report[1024];</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;    printf(<span class="stringliteral">&quot;PJSIP Performance Measurement Tool v%s\n&quot;</span></div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;           <span class="stringliteral">&quot;(c)2006 pjsip.org\n\n&quot;</span>,</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;           PJ_VERSION);</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;    <span class="keywordflow">if</span> (create_app() != 0)</div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;</div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;    <span class="keywordflow">if</span> (init_options(argc, argv) != 0)</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;    <span class="keywordflow">if</span> (init_sip() != 0)</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;    <span class="keywordflow">if</span> (init_media() != 0)</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;</div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;    pj_log_set_level(app.log_level);</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;    <span class="keywordflow">if</span> (app.log_level &gt; 4) {</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;        <a class="code" href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a>(app.sip_endpt, &amp;msg_logger);</div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;    }</div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;</div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;</div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;    <span class="comment">/* Misc infos */</span></div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;    <span class="keywordflow">if</span> (app.client.dst_uri.slen != 0) {</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;        <span class="keywordflow">if</span> (app.client.method.id == <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a>) {</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;            <span class="keywordflow">if</span> (app.client.stateless) {</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;                PJ_LOG(3,(THIS_FILE, </div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;                          <span class="stringliteral">&quot;Info: --stateless option makes no sense for INVITE,&quot;</span></div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;                          <span class="stringliteral">&quot; ignored.&quot;</span>));</div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;            }</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;        }</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;    }</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;</div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;    <span class="keywordflow">if</span> (app.client.dst_uri.slen) {</div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;        <span class="comment">/* Client mode */</span></div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;        pj_status_t status;</div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;        <span class="keywordtype">char</span> test_type[64];</div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;        <span class="keywordtype">unsigned</span> msec_req, msec_res;</div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;        <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;        <span class="comment">/* Get the job name */</span></div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;        <span class="keywordflow">if</span> (app.client.method.id == <a class="code" href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a>) {</div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;            pj_ansi_strcpy(test_type, <span class="stringliteral">&quot;INVITE calls&quot;</span>);</div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (app.client.stateless) {</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;            pj_ansi_sprintf(test_type, <span class="stringliteral">&quot;stateless %.*s requests&quot;</span>,</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;                            (<span class="keywordtype">int</span>)app.client.method.name.slen,</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;                            app.client.method.name.ptr);</div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;            pj_ansi_sprintf(test_type, <span class="stringliteral">&quot;stateful %.*s requests&quot;</span>,</div><div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;                            (<span class="keywordtype">int</span>)app.client.method.name.slen,</div><div class="line"><a name="l01708"></a><span class="lineno"> 1708</span>&#160;                            app.client.method.name.ptr);</div><div class="line"><a name="l01709"></a><span class="lineno"> 1709</span>&#160;        }</div><div class="line"><a name="l01710"></a><span class="lineno"> 1710</span>&#160;        </div><div class="line"><a name="l01711"></a><span class="lineno"> 1711</span>&#160;</div><div class="line"><a name="l01712"></a><span class="lineno"> 1712</span>&#160;        printf(<span class="stringliteral">&quot;Sending %d %s to &#39;%.*s&#39; with %d maximum outstanding jobs, please wait..\n&quot;</span>, </div><div class="line"><a name="l01713"></a><span class="lineno"> 1713</span>&#160;                  app.client.job_count, test_type,</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;                  (<span class="keywordtype">int</span>)app.client.dst_uri.slen, app.client.dst_uri.ptr,</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;                  app.client.job_window);</div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;</div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;app.thread_count; ++i) {</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;            status = pj_thread_create(app.pool, NULL, &amp;client_thread, </div><div class="line"><a name="l01719"></a><span class="lineno"> 1719</span>&#160;                                      (<span class="keywordtype">void</span>*)(pj_ssize_t)i, 0, 0, </div><div class="line"><a name="l01720"></a><span class="lineno"> 1720</span>&#160;                                      &amp;app.thread[i]);</div><div class="line"><a name="l01721"></a><span class="lineno"> 1721</span>&#160;            <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01722"></a><span class="lineno"> 1722</span>&#160;                app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to create thread&quot;</span>, status);</div><div class="line"><a name="l01723"></a><span class="lineno"> 1723</span>&#160;                <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01724"></a><span class="lineno"> 1724</span>&#160;            }</div><div class="line"><a name="l01725"></a><span class="lineno"> 1725</span>&#160;        }</div><div class="line"><a name="l01726"></a><span class="lineno"> 1726</span>&#160;</div><div class="line"><a name="l01727"></a><span class="lineno"> 1727</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;app.thread_count; ++i) {</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;            pj_thread_join(app.thread[i]);</div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;            app.thread[i] = NULL;</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;        }</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;</div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;        <span class="keywordflow">if</span> (app.client.last_completion.sec) {</div><div class="line"><a name="l01733"></a><span class="lineno"> 1733</span>&#160;            pj_time_val duration;</div><div class="line"><a name="l01734"></a><span class="lineno"> 1734</span>&#160;            duration = app.client.last_completion;</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;            PJ_TIME_VAL_SUB(duration, app.client.first_request);</div><div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;            msec_res = PJ_TIME_VAL_MSEC(duration);</div><div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;            msec_res = app.client.timeout * 1000;</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;        }</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;        <span class="keywordflow">if</span> (msec_res == 0) msec_res = 1;</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;        <span class="keywordflow">if</span> (app.client.requests_sent.sec) {</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;            pj_time_val duration;</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;            duration = app.client.requests_sent;</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;            PJ_TIME_VAL_SUB(duration, app.client.first_request);</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;            msec_req = PJ_TIME_VAL_MSEC(duration);</div><div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;            msec_req = app.client.timeout * 1000;</div><div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;        }</div><div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;</div><div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;        <span class="keywordflow">if</span> (msec_req == 0) msec_req = 1;</div><div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;        <span class="keywordflow">if</span> (app.client.job_submitted &lt; app.client.job_count)</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;            puts(<span class="stringliteral">&quot;\ntimed-out!\n&quot;</span>);</div><div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;            puts(<span class="stringliteral">&quot;\ndone.\n&quot;</span>);</div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;        pj_ansi_snprintf(</div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;            report, <span class="keyword">sizeof</span>(report),</div><div class="line"><a name="l01761"></a><span class="lineno"> 1761</span>&#160;            <span class="stringliteral">&quot;Total %d %s sent in %d ms at rate of %d/sec\n&quot;</span></div><div class="line"><a name="l01762"></a><span class="lineno"> 1762</span>&#160;            <span class="stringliteral">&quot;Total %d responses receieved in %d ms at rate of %d/sec:&quot;</span>,</div><div class="line"><a name="l01763"></a><span class="lineno"> 1763</span>&#160;            app.client.job_submitted, test_type, msec_req, </div><div class="line"><a name="l01764"></a><span class="lineno"> 1764</span>&#160;            app.client.job_submitted * 1000 / msec_req,</div><div class="line"><a name="l01765"></a><span class="lineno"> 1765</span>&#160;            app.client.total_responses, msec_res,</div><div class="line"><a name="l01766"></a><span class="lineno"> 1766</span>&#160;            app.client.total_responses*1000/msec_res);</div><div class="line"><a name="l01767"></a><span class="lineno"> 1767</span>&#160;        write_report(report);</div><div class="line"><a name="l01768"></a><span class="lineno"> 1768</span>&#160;</div><div class="line"><a name="l01769"></a><span class="lineno"> 1769</span>&#160;        <span class="comment">/* Print detailed response code received */</span></div><div class="line"><a name="l01770"></a><span class="lineno"> 1770</span>&#160;        pj_ansi_sprintf(report, <span class="stringliteral">&quot;\nDetailed responses received:&quot;</span>);</div><div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;        write_report(report);</div><div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;</div><div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;PJ_ARRAY_SIZE(app.client.response_codes); ++i) {</div><div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;            <span class="keyword">const</span> pj_str_t *reason;</div><div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;</div><div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;            <span class="keywordflow">if</span> (app.client.response_codes[i] == 0)</div><div class="line"><a name="l01777"></a><span class="lineno"> 1777</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l01778"></a><span class="lineno"> 1778</span>&#160;</div><div class="line"><a name="l01779"></a><span class="lineno"> 1779</span>&#160;            reason = <a class="code" href="group__PJSIP__MSG__LINE.htm#gaf5eea65c3b5d78522b857cc13bf753c8">pjsip_get_status_text</a>(i);</div><div class="line"><a name="l01780"></a><span class="lineno"> 1780</span>&#160;            pj_ansi_snprintf( report, <span class="keyword">sizeof</span>(report),</div><div class="line"><a name="l01781"></a><span class="lineno"> 1781</span>&#160;                              <span class="stringliteral">&quot; - %d responses:  %7d     (%.*s)&quot;</span>,</div><div class="line"><a name="l01782"></a><span class="lineno"> 1782</span>&#160;                              i, app.client.response_codes[i],</div><div class="line"><a name="l01783"></a><span class="lineno"> 1783</span>&#160;                              (<span class="keywordtype">int</span>)reason-&gt;slen, reason-&gt;ptr);</div><div class="line"><a name="l01784"></a><span class="lineno"> 1784</span>&#160;            write_report(report);</div><div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;        }</div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;</div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;        <span class="comment">/* Total responses and rate */</span></div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;        pj_ansi_snprintf( report, <span class="keyword">sizeof</span>(report),</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;            <span class="stringliteral">&quot;                    ------\n&quot;</span></div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;            <span class="stringliteral">&quot; TOTAL responses:  %7d (rate=%d/sec)\n&quot;</span>,</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;            app.client.total_responses, </div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;            app.client.total_responses*1000/msec_res);</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;</div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;        write_report(report);</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;        pj_ansi_sprintf(report, <span class="stringliteral">&quot;Maximum outstanding job: %d&quot;</span>, </div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;                        app.client.stat_max_window);</div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;        write_report(report);</div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;</div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;        <span class="comment">/* Server mode */</span></div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;        <span class="keywordtype">char</span> s[10], *unused;</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;        pj_status_t status;</div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;        <span class="keywordtype">unsigned</span> i;</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;</div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;        puts(<span class="stringliteral">&quot;pjsip-perf started in server-mode&quot;</span>);</div><div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;</div><div class="line"><a name="l01809"></a><span class="lineno"> 1809</span>&#160;        printf(<span class="stringliteral">&quot;Receiving requests on the following URIs:\n&quot;</span></div><div class="line"><a name="l01810"></a><span class="lineno"> 1810</span>&#160;               <span class="stringliteral">&quot;  sip:0@%.*s:%d%s    for stateless handling\n&quot;</span></div><div class="line"><a name="l01811"></a><span class="lineno"> 1811</span>&#160;               <span class="stringliteral">&quot;  sip:1@%.*s:%d%s    for stateful handling\n&quot;</span></div><div class="line"><a name="l01812"></a><span class="lineno"> 1812</span>&#160;               <span class="stringliteral">&quot;  sip:2@%.*s:%d%s    for call handling\n&quot;</span>,</div><div class="line"><a name="l01813"></a><span class="lineno"> 1813</span>&#160;               (<span class="keywordtype">int</span>)app.local_addr.slen,</div><div class="line"><a name="l01814"></a><span class="lineno"> 1814</span>&#160;               app.local_addr.ptr,</div><div class="line"><a name="l01815"></a><span class="lineno"> 1815</span>&#160;               app.local_port,</div><div class="line"><a name="l01816"></a><span class="lineno"> 1816</span>&#160;               (app.use_tcp ? <span class="stringliteral">&quot;;transport=tcp&quot;</span> : <span class="stringliteral">&quot;&quot;</span>),</div><div class="line"><a name="l01817"></a><span class="lineno"> 1817</span>&#160;               (<span class="keywordtype">int</span>)app.local_addr.slen,</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;               app.local_addr.ptr,</div><div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;               app.local_port,</div><div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;               (app.use_tcp ? <span class="stringliteral">&quot;;transport=tcp&quot;</span> : <span class="stringliteral">&quot;&quot;</span>),</div><div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;               (<span class="keywordtype">int</span>)app.local_addr.slen,</div><div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;               app.local_addr.ptr,</div><div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;               app.local_port,</div><div class="line"><a name="l01824"></a><span class="lineno"> 1824</span>&#160;               (app.use_tcp ? <span class="stringliteral">&quot;;transport=tcp&quot;</span> : <span class="stringliteral">&quot;&quot;</span>));</div><div class="line"><a name="l01825"></a><span class="lineno"> 1825</span>&#160;        printf(<span class="stringliteral">&quot;INVITE with non-matching user part will be handled call-statefully\n&quot;</span>);</div><div class="line"><a name="l01826"></a><span class="lineno"> 1826</span>&#160;</div><div class="line"><a name="l01827"></a><span class="lineno"> 1827</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;app.thread_count; ++i) {</div><div class="line"><a name="l01828"></a><span class="lineno"> 1828</span>&#160;            status = pj_thread_create(app.pool, NULL, &amp;server_thread, </div><div class="line"><a name="l01829"></a><span class="lineno"> 1829</span>&#160;                                      (<span class="keywordtype">void</span>*)(pj_ssize_t)i, 0, 0, </div><div class="line"><a name="l01830"></a><span class="lineno"> 1830</span>&#160;                                      &amp;app.thread[i]);</div><div class="line"><a name="l01831"></a><span class="lineno"> 1831</span>&#160;            <span class="keywordflow">if</span> (status != PJ_SUCCESS) {</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;                app_perror(THIS_FILE, <span class="stringliteral">&quot;Unable to create thread&quot;</span>, status);</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;                <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;            }</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;        }</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;        puts(<span class="stringliteral">&quot;\nPress &lt;ENTER&gt; to quit\n&quot;</span>);</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;        fflush(stdout);</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;        unused = fgets(s, <span class="keyword">sizeof</span>(s), stdin);</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;        PJ_UNUSED_ARG(unused);</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;</div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;        app.thread_quit = PJ_TRUE;</div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;        <span class="keywordflow">for</span> (i=0; i&lt;app.thread_count; ++i) {</div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;            pj_thread_join(app.thread[i]);</div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;            app.thread[i] = NULL;</div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;        }</div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;        puts(<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;    }</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;</div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;    destroy_app();</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;</div><div class="line"><a name="l01854"></a><span class="lineno"> 1854</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l01855"></a><span class="lineno"> 1855</span>&#160;}</div><div class="line"><a name="l01856"></a><span class="lineno"> 1856</span>&#160;</div><div class="ttc" id="structpjsip__module_htm_a57f9af3c6add3b8355d64ef4d026a27b"><div class="ttname"><a href="structpjsip__module.htm#a57f9af3c6add3b8355d64ef4d026a27b">pjsip_module::id</a></div><div class="ttdeci">int id</div><div class="ttdef"><b>Definition:</b> sip_module.h:71</div></div>
<div class="ttc" id="group__PJSIP__MOD_htm_gga45df6ed35a756f4f91e79dfc47a140baabb2b3142e3a34b5f06df57084502ea7b"><div class="ttname"><a href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baabb2b3142e3a34b5f06df57084502ea7b">PJSIP_MOD_PRIORITY_TRANSPORT_LAYER</a></div><div class="ttdef"><b>Definition:</b> sip_module.h:191</div></div>
<div class="ttc" id="structpjsip__tx__data_htm_afbdf7b29afb599e5e58b1c2b2f3d480b"><div class="ttname"><a href="structpjsip__tx__data.htm#afbdf7b29afb599e5e58b1c2b2f3d480b">pjsip_tx_data::buf</a></div><div class="ttdeci">pjsip_buffer buf</div><div class="ttdef"><b>Definition:</b> sip_transport.h:555</div></div>
<div class="ttc" id="structpjsip__msg_htm_a121c667b91084eb868069d428299351a"><div class="ttname"><a href="structpjsip__msg.htm#a121c667b91084eb868069d428299351a">pjsip_msg::req</a></div><div class="ttdeci">struct pjsip_request_line req</div><div class="ttdef"><b>Definition:</b> sip_msg.h:792</div></div>
<div class="ttc" id="structpjsip__inv__callback_htm_ad3cfa106326745a01c9324581c7d29c8"><div class="ttname"><a href="structpjsip__inv__callback.htm#ad3cfa106326745a01c9324581c7d29c8">pjsip_inv_callback::on_media_update</a></div><div class="ttdeci">void(* on_media_update)(pjsip_inv_session *inv_ses, pj_status_t status)</div><div class="ttdef"><b>Definition:</b> sip_inv.h:243</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_gafd8e278e13d53c78ec6f4dabc2ba2a04"><div class="ttname"><a href="group__PJSIP__INV.htm#gafd8e278e13d53c78ec6f4dabc2ba2a04">pjsip_inv_usage_init</a></div><div class="ttdeci">pj_status_t pjsip_inv_usage_init(pjsip_endpoint *endpt, const pjsip_inv_callback *cb)</div></div>
<div class="ttc" id="group__PJSIP__DIALOG_htm_ga4271e64898c6f3822c28fbca07c706b5"><div class="ttname"><a href="group__PJSIP__DIALOG.htm#ga4271e64898c6f3822c28fbca07c706b5">pjsip_dlg_create_response</a></div><div class="ttdeci">pj_status_t pjsip_dlg_create_response(pjsip_dialog *dlg, pjsip_rx_data *rdata, int st_code, const pj_str_t *st_text, pjsip_tx_data **tdata)</div></div>
<div class="ttc" id="group__PJSIP__MSG__LINE_htm_gaf5eea65c3b5d78522b857cc13bf753c8"><div class="ttname"><a href="group__PJSIP__MSG__LINE.htm#gaf5eea65c3b5d78522b857cc13bf753c8">pjsip_get_status_text</a></div><div class="ttdeci">const pj_str_t * pjsip_get_status_text(int status_code)</div></div>
<div class="ttc" id="structpjsip__tx__data_htm"><div class="ttname"><a href="structpjsip__tx__data.htm">pjsip_tx_data</a></div><div class="ttdef"><b>Definition:</b> sip_transport.h:508</div></div>
<div class="ttc" id="group__PJSIP__ENDPT__STATELESS_htm_ga6a5dc2cd5b43a1adf869c9746593f818"><div class="ttname"><a href="group__PJSIP__ENDPT__STATELESS.htm#ga6a5dc2cd5b43a1adf869c9746593f818">pjsip_endpt_create_request</a></div><div class="ttdeci">pj_status_t pjsip_endpt_create_request(pjsip_endpoint *endpt, const pjsip_method *method, const pj_str_t *target, const pj_str_t *from, const pj_str_t *to, const pj_str_t *contact, const pj_str_t *call_id, int cseq, const pj_str_t *text, pjsip_tx_data **p_tdata)</div></div>
<div class="ttc" id="structpjsip__host__port_htm"><div class="ttname"><a href="structpjsip__host__port.htm">pjsip_host_port</a></div><div class="ttdef"><b>Definition:</b> sip_types.h:218</div></div>
<div class="ttc" id="structpjsip__transaction_htm_a2319847333550ff3e8e5d7ae4240cc3e"><div class="ttname"><a href="structpjsip__transaction.htm#a2319847333550ff3e8e5d7ae4240cc3e">pjsip_transaction::method</a></div><div class="ttdeci">pjsip_method method</div><div class="ttdef"><b>Definition:</b> sip_transaction.h:99</div></div>
<div class="ttc" id="pjsip__simple_8h_htm"><div class="ttname"><a href="pjsip__simple_8h.htm">pjsip_simple.h</a></div><div class="ttdoc">SIP SIMPLE Extension. </div></div>
<div class="ttc" id="group__PJSIP__URI__GENERIC_htm_ga183cb3d94781c981244b38bfeb46f81f"><div class="ttname"><a href="group__PJSIP__URI__GENERIC.htm#ga183cb3d94781c981244b38bfeb46f81f">PJSIP_URI_SCHEME_IS_SIPS</a></div><div class="ttdeci">#define PJSIP_URI_SCHEME_IS_SIPS(url)</div><div class="ttdef"><b>Definition:</b> sip_uri.h:241</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_ga0b80fd8a5a89df2228b681f141c1ebd9"><div class="ttname"><a href="group__PJSIP__INV.htm#ga0b80fd8a5a89df2228b681f141c1ebd9">pjsip_inv_send_msg</a></div><div class="ttdeci">pj_status_t pjsip_inv_send_msg(pjsip_inv_session *inv, pjsip_tx_data *tdata)</div></div>
<div class="ttc" id="group__PJSIP__DIALOG_htm_ga3283f8502b1df5d37914668338351a4f"><div class="ttname"><a href="group__PJSIP__DIALOG.htm#ga3283f8502b1df5d37914668338351a4f">pjsip_dlg_dec_lock</a></div><div class="ttdeci">void pjsip_dlg_dec_lock(pjsip_dialog *dlg)</div></div>
<div class="ttc" id="structpjsip__method_htm_a107556b345ce2a3fbdff4f64e1cd43be"><div class="ttname"><a href="structpjsip__method.htm#a107556b345ce2a3fbdff4f64e1cd43be">pjsip_method::id</a></div><div class="ttdeci">pjsip_method_e id</div><div class="ttdef"><b>Definition:</b> sip_msg.h:79</div></div>
<div class="ttc" id="structpjsip__method_htm"><div class="ttname"><a href="structpjsip__method.htm">pjsip_method</a></div><div class="ttdef"><b>Definition:</b> sip_msg.h:77</div></div>
<div class="ttc" id="structpjsip__tx__data_htm_a0cdb67b05679c1b76812961a6fa7bc02"><div class="ttname"><a href="structpjsip__tx__data.htm#a0cdb67b05679c1b76812961a6fa7bc02">pjsip_tx_data::pool</a></div><div class="ttdeci">pj_pool_t * pool</div><div class="ttdef"><b>Definition:</b> sip_transport.h:514</div></div>
<div class="ttc" id="group__PJSIP__MSG__METHOD_htm_gafdd26e26092275d7f156a0d8efe90b78"><div class="ttname"><a href="group__PJSIP__MSG__METHOD.htm#gafdd26e26092275d7f156a0d8efe90b78">pjsip_get_options_method</a></div><div class="ttdeci">const pjsip_method * pjsip_get_options_method(void)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_ac54fd287cfe134a0efe3ae17b4d51047"><div class="ttname"><a href="structpjsip__rx__data.htm#ac54fd287cfe134a0efe3ae17b4d51047">pjsip_rx_data::len</a></div><div class="ttdeci">pj_ssize_t len</div><div class="ttdef"><b>Definition:</b> sip_transport.h:321</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__UTIL_htm_ga72b5433f82a2f5893f4f5c3d9b4f1d47"><div class="ttname"><a href="group__PJSIP__TRANSACT__UTIL.htm#ga72b5433f82a2f5893f4f5c3d9b4f1d47">pjsip_endpt_respond</a></div><div class="ttdeci">pj_status_t pjsip_endpt_respond(pjsip_endpoint *endpt, pjsip_module *tsx_user, pjsip_rx_data *rdata, int st_code, const pj_str_t *st_text, const pjsip_hdr *hdr_list, const pjsip_msg_body *body, pjsip_transaction **p_tsx)</div></div>
<div class="ttc" id="structpjsip__tpfactory_htm"><div class="ttname"><a href="structpjsip__tpfactory.htm">pjsip_tpfactory</a></div><div class="ttdef"><b>Definition:</b> sip_transport.h:1001</div></div>
<div class="ttc" id="structpjsip__uri_htm"><div class="ttname"><a href="structpjsip__uri.htm">pjsip_uri</a></div><div class="ttdef"><b>Definition:</b> sip_uri.h:222</div></div>
<div class="ttc" id="structpjsip__transaction_htm_accf03cc6f6d2c02ae0d7c0814e253629"><div class="ttname"><a href="structpjsip__transaction.htm#accf03cc6f6d2c02ae0d7c0814e253629">pjsip_transaction::state</a></div><div class="ttdeci">pjsip_tsx_state_e state</div><div class="ttdef"><b>Definition:</b> sip_transaction.h:110</div></div>
<div class="ttc" id="structpjsip__dialog_htm_aab6bd0fc8bb4f29bacbf68070bad6c2b"><div class="ttname"><a href="structpjsip__dialog.htm#aab6bd0fc8bb4f29bacbf68070bad6c2b">pjsip_dialog::pool</a></div><div class="ttdeci">pj_pool_t * pool</div><div class="ttdef"><b>Definition:</b> sip_dialog.h:143</div></div>
<div class="ttc" id="group__PJSIP__ENDPT__STATELESS_htm_ga09a4577a6c0b7c14c37d0981b1d55f07"><div class="ttname"><a href="group__PJSIP__ENDPT__STATELESS.htm#ga09a4577a6c0b7c14c37d0981b1d55f07">pjsip_endpt_respond_stateless</a></div><div class="ttdeci">pj_status_t pjsip_endpt_respond_stateless(pjsip_endpoint *endpt, pjsip_rx_data *rdata, int st_code, const pj_str_t *st_text, const pjsip_hdr *hdr_list, const pjsip_msg_body *body)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_aa3f886661425441acda38e17c69f53fa"><div class="ttname"><a href="structpjsip__rx__data.htm#aa3f886661425441acda38e17c69f53fa">pjsip_rx_data::src_name</a></div><div class="ttdeci">char src_name[PJ_INET6_ADDRSTRLEN]</div><div class="ttdef"><b>Definition:</b> sip_transport.h:330</div></div>
<div class="ttc" id="structpjsip__msg__body_htm"><div class="ttname"><a href="structpjsip__msg__body.htm">pjsip_msg_body</a></div><div class="ttdef"><b>Definition:</b> sip_msg.h:606</div></div>
<div class="ttc" id="group__PJSIP__TRANSPORT__UDP_htm_ga065dd345bde0618c3c7301d3cbc31ac8"><div class="ttname"><a href="group__PJSIP__TRANSPORT__UDP.htm#ga065dd345bde0618c3c7301d3cbc31ac8">pjsip_udp_transport_start</a></div><div class="ttdeci">pj_status_t pjsip_udp_transport_start(pjsip_endpoint *endpt, const pj_sockaddr_in *local, const pjsip_host_port *a_name, unsigned async_cnt, pjsip_transport **p_transport)</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_ga446995d30676e2f47279056793756f0e"><div class="ttname"><a href="group__PJSIP__INV.htm#ga446995d30676e2f47279056793756f0e">pjsip_inv_create_uas</a></div><div class="ttdeci">pj_status_t pjsip_inv_create_uas(pjsip_dialog *dlg, pjsip_rx_data *rdata, const pjmedia_sdp_session *local_sdp, unsigned options, pjsip_inv_session **p_inv)</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__TRANSACTION_htm_ga0986013fc64382f90f7d21ecc1efb614"><div class="ttname"><a href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga0986013fc64382f90f7d21ecc1efb614">pjsip_rdata_get_tsx</a></div><div class="ttdeci">pjsip_transaction * pjsip_rdata_get_tsx(pjsip_rx_data *rdata)</div></div>
<div class="ttc" id="structpjsip__event_htm_a4c9815f5453bf666110018f942243c80"><div class="ttname"><a href="structpjsip__event.htm#a4c9815f5453bf666110018f942243c80">pjsip_event::type</a></div><div class="ttdeci">pjsip_event_id_e type</div><div class="ttdef"><b>Definition:</b> sip_event.h:88</div></div>
<div class="ttc" id="structpjsip__inv__session_htm_aeb5155cf3dab589bcb6663488acdb8b3"><div class="ttname"><a href="structpjsip__inv__session.htm#aeb5155cf3dab589bcb6663488acdb8b3">pjsip_inv_session::mod_data</a></div><div class="ttdeci">void * mod_data[PJSIP_MAX_MODULE]</div><div class="ttdef"><b>Definition:</b> sip_inv.h:440</div></div>
<div class="ttc" id="group__PJSIP__URI__GENERIC_htm_ga19b0a14fb7d3f74957cd3fe85d179dcb"><div class="ttname"><a href="group__PJSIP__URI__GENERIC.htm#ga19b0a14fb7d3f74957cd3fe85d179dcb">pjsip_uri_get_scheme</a></div><div class="ttdeci">const pj_str_t * pjsip_uri_get_scheme(const void *uri)</div><div class="ttdef"><b>Definition:</b> sip_uri.h:258</div></div>
<div class="ttc" id="structpjsip__buffer_htm_a2976093d30aebcb39c5d0214dc14523b"><div class="ttname"><a href="structpjsip__buffer.htm#a2976093d30aebcb39c5d0214dc14523b">pjsip_buffer::start</a></div><div class="ttdeci">char * start</div><div class="ttdef"><b>Definition:</b> sip_types.h:202</div></div>
<div class="ttc" id="structpjsip__status__line_htm_a16eee26aff07ce6ac92764dfb7d63477"><div class="ttname"><a href="structpjsip__status__line.htm#a16eee26aff07ce6ac92764dfb7d63477">pjsip_status_line::code</a></div><div class="ttdeci">int code</div><div class="ttdef"><b>Definition:</b> sip_msg.h:392</div></div>
<div class="ttc" id="structpjsip__transport_htm_a61d5ad7902c0be74ce77a9e615ae02f4"><div class="ttname"><a href="structpjsip__transport.htm#a61d5ad7902c0be74ce77a9e615ae02f4">pjsip_transport::type_name</a></div><div class="ttdeci">char * type_name</div><div class="ttdef"><b>Definition:</b> sip_transport.h:790</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_ga7dbf4062678f4a75c3ba15f5b7a81ebf"><div class="ttname"><a href="group__PJSIP__INV.htm#ga7dbf4062678f4a75c3ba15f5b7a81ebf">pjsip_inv_initial_answer</a></div><div class="ttdeci">pj_status_t pjsip_inv_initial_answer(pjsip_inv_session *inv, pjsip_rx_data *rdata, int st_code, const pj_str_t *st_text, const pjmedia_sdp_session *sdp, pjsip_tx_data **p_tdata)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_aed16618c424cb7c2f9620c2dc2920a91"><div class="ttname"><a href="structpjsip__rx__data.htm#aed16618c424cb7c2f9620c2dc2920a91">pjsip_rx_data::msg_buf</a></div><div class="ttdeci">char * msg_buf</div><div class="ttdef"><b>Definition:</b> sip_transport.h:345</div></div>
<div class="ttc" id="group__PJSIP__MSG__METHOD_htm_gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9"><div class="ttname"><a href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a3191457e7b8629e0cb3955564784e5b9">PJSIP_INVITE_METHOD</a></div><div class="ttdef"><b>Definition:</b> sip_msg.h:57</div></div>
<div class="ttc" id="group__PJSIP__ENDPT__STATELESS_htm_gad0b30a81c6b26ffd3615a5adcb9bd1f6"><div class="ttname"><a href="group__PJSIP__ENDPT__STATELESS.htm#gad0b30a81c6b26ffd3615a5adcb9bd1f6">pjsip_endpt_send_response</a></div><div class="ttdeci">pj_status_t pjsip_endpt_send_response(pjsip_endpoint *endpt, pjsip_response_addr *res_addr, pjsip_tx_data *tdata, void *token, pjsip_send_callback cb)</div></div>
<div class="ttc" id="group__PJSIP__ENDPT_htm_ga0739d42024587fc86866dd9b24b9dc17"><div class="ttname"><a href="group__PJSIP__ENDPT.htm#ga0739d42024587fc86866dd9b24b9dc17">pjsip_endpt_destroy</a></div><div class="ttdeci">void pjsip_endpt_destroy(pjsip_endpoint *endpt)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_ab6aa6cf77c7843500dce282f19630890"><div class="ttname"><a href="structpjsip__rx__data.htm#ab6aa6cf77c7843500dce282f19630890">pjsip_rx_data::pool</a></div><div class="ttdeci">pj_pool_t * pool</div><div class="ttdef"><b>Definition:</b> sip_transport.h:291</div></div>
<div class="ttc" id="group__PJSIP__ENDPT_htm_ga3e04c78e14bca71bb090a08dad930806"><div class="ttname"><a href="group__PJSIP__ENDPT.htm#ga3e04c78e14bca71bb090a08dad930806">pjsip_endpt_handle_events2</a></div><div class="ttdeci">pj_status_t pjsip_endpt_handle_events2(pjsip_endpoint *endpt, const pj_time_val *max_timeout, unsigned *count)</div></div>
<div class="ttc" id="group__PJSIP__ENDPT__STATELESS_htm_ga5d1406491458eff09be035d6441ff5cf"><div class="ttname"><a href="group__PJSIP__ENDPT__STATELESS.htm#ga5d1406491458eff09be035d6441ff5cf">pjsip_get_response_addr</a></div><div class="ttdeci">pj_status_t pjsip_get_response_addr(pj_pool_t *pool, pjsip_rx_data *rdata, pjsip_response_addr *res_addr)</div></div>
<div class="ttc" id="group__PJSIP__ENDPT_htm_gaf264125f3592f83d0dce3bccf2bd5916"><div class="ttname"><a href="group__PJSIP__ENDPT.htm#gaf264125f3592f83d0dce3bccf2bd5916">pjsip_endpt_create</a></div><div class="ttdeci">pj_status_t pjsip_endpt_create(pj_pool_factory *pf, const char *name, pjsip_endpoint **endpt)</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_ga5a0312d7ff604f9fd7308bbcdb1e08c7"><div class="ttname"><a href="group__PJSIP__INV.htm#ga5a0312d7ff604f9fd7308bbcdb1e08c7">pjsip_inv_create_uac</a></div><div class="ttdeci">pj_status_t pjsip_inv_create_uac(pjsip_dialog *dlg, const pjmedia_sdp_session *local_sdp, unsigned options, pjsip_inv_session **p_inv)</div></div>
<div class="ttc" id="structpjsip__event_htm"><div class="ttname"><a href="structpjsip__event.htm">pjsip_event</a></div><div class="ttdef"><b>Definition:</b> sip_event.h:81</div></div>
<div class="ttc" id="group__PJSIP__MSG__METHOD_htm_gga66b57e1b5645d2ee843141a0e657b0d1a0e564a7a7fc064ef37547b2d82117372"><div class="ttname"><a href="group__PJSIP__MSG__METHOD.htm#gga66b57e1b5645d2ee843141a0e657b0d1a0e564a7a7fc064ef37547b2d82117372">PJSIP_ACK_METHOD</a></div><div class="ttdef"><b>Definition:</b> sip_msg.h:59</div></div>
<div class="ttc" id="structpjsip__sip__uri_htm"><div class="ttname"><a href="structpjsip__sip__uri.htm">pjsip_sip_uri</a></div><div class="ttdef"><b>Definition:</b> sip_uri.h:336</div></div>
<div class="ttc" id="structpjsip__host__port_htm_a6fb87164bbfdc7b4d7dcf0b0f4ebcab6"><div class="ttname"><a href="structpjsip__host__port.htm#a6fb87164bbfdc7b4d7dcf0b0f4ebcab6">pjsip_host_port::port</a></div><div class="ttdeci">int port</div><div class="ttdef"><b>Definition:</b> sip_types.h:221</div></div>
<div class="ttc" id="structpjsip__transport_htm"><div class="ttname"><a href="structpjsip__transport.htm">pjsip_transport</a></div><div class="ttdef"><b>Definition:</b> sip_transport.h:776</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__UTIL_htm_gaa4c9a6482b6077351daf2f7974ae7371"><div class="ttname"><a href="group__PJSIP__TRANSACT__UTIL.htm#gaa4c9a6482b6077351daf2f7974ae7371">pjsip_endpt_send_request</a></div><div class="ttdeci">pj_status_t pjsip_endpt_send_request(pjsip_endpoint *endpt, pjsip_tx_data *tdata, pj_int32_t timeout, void *token, pjsip_endpt_send_callback cb)</div></div>
<div class="ttc" id="group__PJSIP__ENDPT_htm_gada884870b0a2079339725984bc3a9b0e"><div class="ttname"><a href="group__PJSIP__ENDPT.htm#gada884870b0a2079339725984bc3a9b0e">pjsip_endpt_get_ioqueue</a></div><div class="ttdeci">pj_ioqueue_t * pjsip_endpt_get_ioqueue(pjsip_endpoint *endpt)</div></div>
<div class="ttc" id="group__PJSIP__MSG__BODY_htm_gaf81cb04a8ccf5f2afca6f69a011d64de"><div class="ttname"><a href="group__PJSIP__MSG__BODY.htm#gaf81cb04a8ccf5f2afca6f69a011d64de">pjsip_msg_body_create</a></div><div class="ttdeci">pjsip_msg_body * pjsip_msg_body_create(pj_pool_t *pool, const pj_str_t *type, const pj_str_t *subtype, const pj_str_t *text)</div></div>
<div class="ttc" id="group__PJSIP__DIALOG_htm_ga6643135a8dbee20a156c1046fda27e03"><div class="ttname"><a href="group__PJSIP__DIALOG.htm#ga6643135a8dbee20a156c1046fda27e03">pjsip_dlg_create_uac</a></div><div class="ttdeci">pj_status_t pjsip_dlg_create_uac(pjsip_user_agent *ua, const pj_str_t *local_uri, const pj_str_t *local_contact, const pj_str_t *remote_uri, const pj_str_t *target, pjsip_dialog **p_dlg)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm"><div class="ttname"><a href="structpjsip__rx__data.htm">pjsip_rx_data</a></div><div class="ttdef"><b>Definition:</b> sip_transport.h:281</div></div>
<div class="ttc" id="structpjsip__buffer_htm_aa6d9d4e81b0ae2494c4d602e2abe29df"><div class="ttname"><a href="structpjsip__buffer.htm#aa6d9d4e81b0ae2494c4d602e2abe29df">pjsip_buffer::cur</a></div><div class="ttdeci">char * cur</div><div class="ttdef"><b>Definition:</b> sip_types.h:207</div></div>
<div class="ttc" id="group__PJSIP__ENDPT_htm_ga1322fd2f38ecbf723e3e7e78632fe140"><div class="ttname"><a href="group__PJSIP__ENDPT.htm#ga1322fd2f38ecbf723e3e7e78632fe140">pjsip_endpt_register_module</a></div><div class="ttdeci">pj_status_t pjsip_endpt_register_module(pjsip_endpoint *endpt, pjsip_module *module)</div></div>
<div class="ttc" id="structpjsip__inv__session_htm"><div class="ttname"><a href="structpjsip__inv__session.htm">pjsip_inv_session</a></div><div class="ttdef"><b>Definition:</b> sip_inv.h:416</div></div>
<div class="ttc" id="group__PJSUA__UA_htm_gaec6ebe425231e64b6cc47f908e187a1e"><div class="ttname"><a href="group__PJSUA__UA.htm#gaec6ebe425231e64b6cc47f908e187a1e">pjsip_ua_instance</a></div><div class="ttdeci">pjsip_user_agent * pjsip_ua_instance(void)</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_gga083ffd9c75c406c41f113479cc1ebc1caab482bbbe77ed88994a790bd6abcc1c5"><div class="ttname"><a href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1caab482bbbe77ed88994a790bd6abcc1c5">PJSIP_INV_STATE_DISCONNECTED</a></div><div class="ttdef"><b>Definition:</b> sip_inv.h:96</div></div>
<div class="ttc" id="group__PJSIP__PARSER_htm_ga48e697c139eb3dfe08fef35fb4823470"><div class="ttname"><a href="group__PJSIP__PARSER.htm#ga48e697c139eb3dfe08fef35fb4823470">pjsip_parse_uri</a></div><div class="ttdeci">pjsip_uri * pjsip_parse_uri(pj_pool_t *pool, char *buf, pj_size_t size, unsigned options)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_a2634f455380250e73c2e8af1d1ef50e9"><div class="ttname"><a href="structpjsip__rx__data.htm#a2634f455380250e73c2e8af1d1ef50e9">pjsip_rx_data::msg_info</a></div><div class="ttdeci">struct pjsip_rx_data::@24 msg_info</div></div>
<div class="ttc" id="structpjsip__host__port_htm_a821575935d109934b86ae40dacbdec2f"><div class="ttname"><a href="structpjsip__host__port.htm#a821575935d109934b86ae40dacbdec2f">pjsip_host_port::host</a></div><div class="ttdeci">pj_str_t host</div><div class="ttdef"><b>Definition:</b> sip_types.h:220</div></div>
<div class="ttc" id="structpjsip__tx__data_htm_a7e2258b4e83ab4b79c859dc1b647ec48"><div class="ttname"><a href="structpjsip__tx__data.htm#a7e2258b4e83ab4b79c859dc1b647ec48">pjsip_tx_data::dst_port</a></div><div class="ttdeci">int dst_port</div><div class="ttdef"><b>Definition:</b> sip_transport.h:602</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_ab7494eaff96dcdb3830537e869feb4d5"><div class="ttname"><a href="structpjsip__rx__data.htm#ab7494eaff96dcdb3830537e869feb4d5">pjsip_rx_data::pkt_info</a></div><div class="ttdeci">struct pjsip_rx_data::@23 pkt_info</div></div>
<div class="ttc" id="sip__types_8h_htm_a1a2637e9a3a7d4cd160dd608c02bf5a9a87ecbe1acc51ef99b226cede50b120ce"><div class="ttname"><a href="sip__types_8h.htm#a1a2637e9a3a7d4cd160dd608c02bf5a9a87ecbe1acc51ef99b226cede50b120ce">PJSIP_UAC_ROLE</a></div><div class="ttdef"><b>Definition:</b> sip_types.h:190</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_gga083ffd9c75c406c41f113479cc1ebc1caf5c664d1b367a44db04f2cca09f6155b"><div class="ttname"><a href="group__PJSIP__INV.htm#gga083ffd9c75c406c41f113479cc1ebc1caf5c664d1b367a44db04f2cca09f6155b">PJSIP_INV_STATE_CONFIRMED</a></div><div class="ttdef"><b>Definition:</b> sip_inv.h:95</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_ad7f82eadbaae8b6c22679da94029289d"><div class="ttname"><a href="structpjsip__rx__data.htm#ad7f82eadbaae8b6c22679da94029289d">pjsip_rx_data::tp_info</a></div><div class="ttdeci">struct pjsip_rx_data::@22 tp_info</div></div>
<div class="ttc" id="group__PJSIP__TRANSPORT_htm_ga06ba51e57f19323087a7bb18c342c55d"><div class="ttname"><a href="group__PJSIP__TRANSPORT.htm#ga06ba51e57f19323087a7bb18c342c55d">pjsip_tx_data_get_info</a></div><div class="ttdeci">char * pjsip_tx_data_get_info(pjsip_tx_data *tdata)</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_ga2a7982ae0f381b057b6c06a99ca87275"><div class="ttname"><a href="group__PJSIP__INV.htm#ga2a7982ae0f381b057b6c06a99ca87275">pjsip_inv_end_session</a></div><div class="ttdeci">pj_status_t pjsip_inv_end_session(pjsip_inv_session *inv, int st_code, const pj_str_t *st_text, pjsip_tx_data **p_tdata)</div></div>
<div class="ttc" id="group__PJSIP__ENDPT__STATELESS_htm_ga155a9b9dce2138e91605d6b7561d70a3"><div class="ttname"><a href="group__PJSIP__ENDPT__STATELESS.htm#ga155a9b9dce2138e91605d6b7561d70a3">pjsip_endpt_send_request_stateless</a></div><div class="ttdeci">pj_status_t pjsip_endpt_send_request_stateless(pjsip_endpoint *endpt, pjsip_tx_data *tdata, void *token, pjsip_send_callback cb)</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__TRANSACTION_htm_ga98b6d8edf24b82c6cbc6afbdf274cdf1"><div class="ttname"><a href="group__PJSIP__TRANSACT__TRANSACTION.htm#ga98b6d8edf24b82c6cbc6afbdf274cdf1">pjsip_tsx_layer_init_module</a></div><div class="ttdeci">pj_status_t pjsip_tsx_layer_init_module(pjsip_endpoint *endpt)</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_adb0a7cf9ce637a3629784acc76073570"><div class="ttname"><a href="structpjsip__rx__data.htm#adb0a7cf9ce637a3629784acc76073570">pjsip_rx_data::msg</a></div><div class="ttdeci">pjsip_msg * msg</div><div class="ttdef"><b>Definition:</b> sip_transport.h:351</div></div>
<div class="ttc" id="group__PJSIP__100REL_htm_ga4235c00a7111a1f04e1e75fcc8174744"><div class="ttname"><a href="group__PJSIP__100REL.htm#ga4235c00a7111a1f04e1e75fcc8174744">pjsip_100rel_init_module</a></div><div class="ttdeci">pj_status_t pjsip_100rel_init_module(pjsip_endpoint *endpt)</div></div>
<div class="ttc" id="group__PJSIP__TRANSPORT_htm_gabeec4be34c0a472782b9224c2c7d08f1"><div class="ttname"><a href="group__PJSIP__TRANSPORT.htm#gabeec4be34c0a472782b9224c2c7d08f1">pjsip_tx_data_dec_ref</a></div><div class="ttdeci">pj_status_t pjsip_tx_data_dec_ref(pjsip_tx_data *tdata)</div></div>
<div class="ttc" id="structpjsip__tx__data_htm_a40e612937d52f8467025379594ad638d"><div class="ttname"><a href="structpjsip__tx__data.htm#a40e612937d52f8467025379594ad638d">pjsip_tx_data::dst_name</a></div><div class="ttdeci">char dst_name[PJ_INET6_ADDRSTRLEN]</div><div class="ttdef"><b>Definition:</b> sip_transport.h:601</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_gac1ec4917f8f7c7376a6ea49201045ddf"><div class="ttname"><a href="group__PJSIP__INV.htm#gac1ec4917f8f7c7376a6ea49201045ddf">pjsip_inv_verify_request</a></div><div class="ttdeci">pj_status_t pjsip_inv_verify_request(pjsip_rx_data *rdata, unsigned *options, const pjmedia_sdp_session *sdp, pjsip_dialog *dlg, pjsip_endpoint *endpt, pjsip_tx_data **tdata)</div></div>
<div class="ttc" id="group__PJSIP__ENDPT_htm_ga404107233ddfd6924432cf62fd6ef036"><div class="ttname"><a href="group__PJSIP__ENDPT.htm#ga404107233ddfd6924432cf62fd6ef036">pjsip_endpt_schedule_timer</a></div><div class="ttdeci">pj_status_t pjsip_endpt_schedule_timer(pjsip_endpoint *endpt, pj_timer_entry *entry, const pj_time_val *delay)</div></div>
<div class="ttc" id="group__PJSIP__DIALOG_htm_ga666cab6ddee2941d4c2f0e3660772bd2"><div class="ttname"><a href="group__PJSIP__DIALOG.htm#ga666cab6ddee2941d4c2f0e3660772bd2">pjsip_dlg_create_uas_and_inc_lock</a></div><div class="ttdeci">pj_status_t pjsip_dlg_create_uas_and_inc_lock(pjsip_user_agent *ua, pjsip_rx_data *rdata, const pj_str_t *contact, pjsip_dialog **p_dlg)</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__TRANSACTION_htm_ggaf361da71faf4b6d47ca50db1b43e95b7a648a4a0676b3c10cb2fad9f562d3befd"><div class="ttname"><a href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7a648a4a0676b3c10cb2fad9f562d3befd">PJSIP_TSX_STATE_CONFIRMED</a></div><div class="ttdef"><b>Definition:</b> sip_transaction.h:69</div></div>
<div class="ttc" id="structpjsip__inv__callback_htm_aa56cc5637ee68ea6d7c32f1eb3cbba55"><div class="ttname"><a href="structpjsip__inv__callback.htm#aa56cc5637ee68ea6d7c32f1eb3cbba55">pjsip_inv_callback::on_state_changed</a></div><div class="ttdeci">void(* on_state_changed)(pjsip_inv_session *inv, pjsip_event *e)</div><div class="ttdef"><b>Definition:</b> sip_inv.h:128</div></div>
<div class="ttc" id="group__PJSUA__UA_htm_ga444b57c13a6e8ac9131bd2c2ff6356ed"><div class="ttname"><a href="group__PJSUA__UA.htm#ga444b57c13a6e8ac9131bd2c2ff6356ed">pjsip_ua_init_module</a></div><div class="ttdeci">pj_status_t pjsip_ua_init_module(pjsip_endpoint *endpt, const pjsip_ua_init_param *prm)</div></div>
<div class="ttc" id="sip__types_8h_htm_a2b184bd797bb08929129539d9dddd329"><div class="ttname"><a href="sip__types_8h.htm#a2b184bd797bb08929129539d9dddd329">pjsip_endpoint</a></div><div class="ttdeci">struct pjsip_endpoint pjsip_endpoint</div><div class="ttdef"><b>Definition:</b> sip_types.h:106</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__TRANSACTION_htm_ggaf361da71faf4b6d47ca50db1b43e95b7af394413f4682ed002b8527de702e8ee9"><div class="ttname"><a href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7af394413f4682ed002b8527de702e8ee9">PJSIP_TSX_STATE_TERMINATED</a></div><div class="ttdef"><b>Definition:</b> sip_transaction.h:70</div></div>
<div class="ttc" id="group__PJSIP__URI__GENERIC_htm_ga4926bf48e30d001e30269e864aba1ecb"><div class="ttname"><a href="group__PJSIP__URI__GENERIC.htm#ga4926bf48e30d001e30269e864aba1ecb">pjsip_uri_get_uri</a></div><div class="ttdeci">void * pjsip_uri_get_uri(const void *uri)</div><div class="ttdef"><b>Definition:</b> sip_uri.h:270</div></div>
<div class="ttc" id="structpjsip__inv__callback_htm"><div class="ttname"><a href="structpjsip__inv__callback.htm">pjsip_inv_callback</a></div><div class="ttdef"><b>Definition:</b> sip_inv.h:115</div></div>
<div class="ttc" id="structpjsip__tpfactory_htm_a542a1f0b35c0642e616fabca73e08694"><div class="ttname"><a href="structpjsip__tpfactory.htm#a542a1f0b35c0642e616fabca73e08694">pjsip_tpfactory::addr_name</a></div><div class="ttdeci">pjsip_host_port addr_name</div><div class="ttdef"><b>Definition:</b> sip_transport.h:1017</div></div>
<div class="ttc" id="structpjsip__msg_htm_af5dadd6eb8d5ed66f9b17f2f61994101"><div class="ttname"><a href="structpjsip__msg.htm#af5dadd6eb8d5ed66f9b17f2f61994101">pjsip_msg::status</a></div><div class="ttdeci">struct pjsip_status_line status</div><div class="ttdef"><b>Definition:</b> sip_msg.h:795</div></div>
<div class="ttc" id="group__PJSIP__DIALOG_htm_ga8ff16237d354ec0f34ea80ba898e9f61"><div class="ttname"><a href="group__PJSIP__DIALOG.htm#ga8ff16237d354ec0f34ea80ba898e9f61">pjsip_dlg_terminate</a></div><div class="ttdeci">pj_status_t pjsip_dlg_terminate(pjsip_dialog *dlg)</div></div>
<div class="ttc" id="group__PJSIP__TRANSPORT_htm_ga21fa4df83fe9468f7fc7a9230b1d88ad"><div class="ttname"><a href="group__PJSIP__TRANSPORT.htm#ga21fa4df83fe9468f7fc7a9230b1d88ad">pjsip_rx_data_get_info</a></div><div class="ttdeci">char * pjsip_rx_data_get_info(pjsip_rx_data *rdata)</div></div>
<div class="ttc" id="structpjsip__inv__session_htm_ab0bd09f668c16bc4e52527952a27c0a7"><div class="ttname"><a href="structpjsip__inv__session.htm#ab0bd09f668c16bc4e52527952a27c0a7">pjsip_inv_session::state</a></div><div class="ttdeci">pjsip_inv_state state</div><div class="ttdef"><b>Definition:</b> sip_inv.h:422</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_a4b02ecc5b865805337e553295caf2aea"><div class="ttname"><a href="structpjsip__rx__data.htm#a4b02ecc5b865805337e553295caf2aea">pjsip_rx_data::transport</a></div><div class="ttdeci">pjsip_transport * transport</div><div class="ttdef"><b>Definition:</b> sip_transport.h:294</div></div>
<div class="ttc" id="structpjsip__rx__data_htm_a8eca6e9b8aa154930c072e461c82b9e9"><div class="ttname"><a href="structpjsip__rx__data.htm#a8eca6e9b8aa154930c072e461c82b9e9">pjsip_rx_data::src_port</a></div><div class="ttdeci">int src_port</div><div class="ttdef"><b>Definition:</b> sip_transport.h:333</div></div>
<div class="ttc" id="structpjsip__msg_htm_ab86379a74e3e84b1903c0c711ca9456f"><div class="ttname"><a href="structpjsip__msg.htm#ab86379a74e3e84b1903c0c711ca9456f">pjsip_msg::line</a></div><div class="ttdeci">union pjsip_msg::@17 line</div></div>
<div class="ttc" id="structpjsip__tx__data_htm_a2eb66221563f9e3eb317562be2da12e9"><div class="ttname"><a href="structpjsip__tx__data.htm#a2eb66221563f9e3eb317562be2da12e9">pjsip_tx_data::tp_info</a></div><div class="ttdeci">struct pjsip_tx_data::@27 tp_info</div></div>
<div class="ttc" id="group__PJSIP__CONFIG_htm_gad4f80a98f2504fdd6542e9bc88c8732b"><div class="ttname"><a href="group__PJSIP__CONFIG.htm#gad4f80a98f2504fdd6542e9bc88c8732b">pjsip_cfg</a></div><div class="ttdeci">pjsip_cfg_t * pjsip_cfg(void)</div><div class="ttdef"><b>Definition:</b> sip_config.h:266</div></div>
<div class="ttc" id="structpjsip__response__addr_htm"><div class="ttname"><a href="structpjsip__response__addr.htm">pjsip_response_addr</a></div><div class="ttdef"><b>Definition:</b> sip_util.h:613</div></div>
<div class="ttc" id="structpjsip__transaction_htm_a936b7534b429c950b1a1cf96e1616640"><div class="ttname"><a href="structpjsip__transaction.htm#a936b7534b429c950b1a1cf96e1616640">pjsip_transaction::mod_data</a></div><div class="ttdeci">void * mod_data[PJSIP_MAX_MODULE]</div><div class="ttdef"><b>Definition:</b> sip_transaction.h:143</div></div>
<div class="ttc" id="structpjsip__inv__session_htm_a6a3f318cdd8999564a878a26401ff0c6"><div class="ttname"><a href="structpjsip__inv__session.htm#a6a3f318cdd8999564a878a26401ff0c6">pjsip_inv_session::role</a></div><div class="ttdeci">pjsip_role_e role</div><div class="ttdef"><b>Definition:</b> sip_inv.h:431</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_ga729c006bbc8076e88ab8337754d2319e"><div class="ttname"><a href="group__PJSIP__INV.htm#ga729c006bbc8076e88ab8337754d2319e">pjsip_inv_invite</a></div><div class="ttdeci">pj_status_t pjsip_inv_invite(pjsip_inv_session *inv, pjsip_tx_data **p_tdata)</div></div>
<div class="ttc" id="structpjsip__sip__uri_htm_ade725ac945a48e9a0060d7fd7ee72c94"><div class="ttname"><a href="structpjsip__sip__uri.htm#ade725ac945a48e9a0060d7fd7ee72c94">pjsip_sip_uri::user</a></div><div class="ttdeci">pj_str_t user</div><div class="ttdef"><b>Definition:</b> sip_uri.h:339</div></div>
<div class="ttc" id="group__PJSIP__MSG__METHOD_htm_ga129244ffaef62fe5d4df27c7f8e61376"><div class="ttname"><a href="group__PJSIP__MSG__METHOD.htm#ga129244ffaef62fe5d4df27c7f8e61376">pjsip_method_init_np</a></div><div class="ttdeci">void pjsip_method_init_np(pjsip_method *m, pj_str_t *str)</div></div>
<div class="ttc" id="structpjsip__module_htm"><div class="ttname"><a href="structpjsip__module.htm">pjsip_module</a></div><div class="ttdef"><b>Definition:</b> sip_module.h:54</div></div>
<div class="ttc" id="group__PJSIP__DIALOG_htm_ga1a27fb4f5745d3cdd206dfaf28696bfa"><div class="ttname"><a href="group__PJSIP__DIALOG.htm#ga1a27fb4f5745d3cdd206dfaf28696bfa">pjsip_dlg_send_response</a></div><div class="ttdeci">pj_status_t pjsip_dlg_send_response(pjsip_dialog *dlg, pjsip_transaction *tsx, pjsip_tx_data *tdata)</div></div>
<div class="ttc" id="structpjsip__dialog_htm"><div class="ttname"><a href="structpjsip__dialog.htm">pjsip_dialog</a></div><div class="ttdef"><b>Definition:</b> sip_dialog.h:136</div></div>
<div class="ttc" id="group__PJSIP__TRANSACT__TRANSACTION_htm_ggaf361da71faf4b6d47ca50db1b43e95b7adea6edaf4e6382e18913d6d98443bea0"><div class="ttname"><a href="group__PJSIP__TRANSACT__TRANSACTION.htm#ggaf361da71faf4b6d47ca50db1b43e95b7adea6edaf4e6382e18913d6d98443bea0">PJSIP_TSX_STATE_COMPLETED</a></div><div class="ttdef"><b>Definition:</b> sip_transaction.h:68</div></div>
<div class="ttc" id="structpjsip__inv__callback_htm_a198399f405e563720c2084dc62a6e2a5"><div class="ttname"><a href="structpjsip__inv__callback.htm#a198399f405e563720c2084dc62a6e2a5">pjsip_inv_callback::on_new_session</a></div><div class="ttdeci">void(* on_new_session)(pjsip_inv_session *inv, pjsip_event *e)</div><div class="ttdef"><b>Definition:</b> sip_inv.h:141</div></div>
<div class="ttc" id="group__PJSIP__TRANSPORT__TCP_htm_ga5c36c000a63c71ea2e01513c4804f925"><div class="ttname"><a href="group__PJSIP__TRANSPORT__TCP.htm#ga5c36c000a63c71ea2e01513c4804f925">pjsip_tcp_transport_start</a></div><div class="ttdeci">pj_status_t pjsip_tcp_transport_start(pjsip_endpoint *endpt, const pj_sockaddr_in *local, unsigned async_cnt, pjsip_tpfactory **p_factory)</div></div>
<div class="ttc" id="structpjsip__transport_htm_a08182142fe120aefe01abc683961bf4c"><div class="ttname"><a href="structpjsip__transport.htm#a08182142fe120aefe01abc683961bf4c">pjsip_transport::local_name</a></div><div class="ttdeci">pjsip_host_port local_name</div><div class="ttdef"><b>Definition:</b> sip_transport.h:796</div></div>
<div class="ttc" id="group__PJSIP__URI__GENERIC_htm_ga7c3048e1ef3dbdb6ddd85ab581d926e5"><div class="ttname"><a href="group__PJSIP__URI__GENERIC.htm#ga7c3048e1ef3dbdb6ddd85ab581d926e5">PJSIP_URI_SCHEME_IS_SIP</a></div><div class="ttdeci">#define PJSIP_URI_SCHEME_IS_SIP(url)</div><div class="ttdef"><b>Definition:</b> sip_uri.h:233</div></div>
<div class="ttc" id="structpjsip__request__line_htm_adb6db6523ad2d7a244cf8c5bb95fe9f9"><div class="ttname"><a href="structpjsip__request__line.htm#adb6db6523ad2d7a244cf8c5bb95fe9f9">pjsip_request_line::uri</a></div><div class="ttdeci">pjsip_uri * uri</div><div class="ttdef"><b>Definition:</b> sip_msg.h:383</div></div>
<div class="ttc" id="structpjsip__tx__data_htm_a5acb7b612a2bc7e17536c9b929fc865c"><div class="ttname"><a href="structpjsip__tx__data.htm#a5acb7b612a2bc7e17536c9b929fc865c">pjsip_tx_data::transport</a></div><div class="ttdeci">pjsip_transport * transport</div><div class="ttdef"><b>Definition:</b> sip_transport.h:598</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_gad2ec8b6d5c6b02f65c979eea05f82f61"><div class="ttname"><a href="group__PJSIP__INV.htm#gad2ec8b6d5c6b02f65c979eea05f82f61">pjsip_inv_answer</a></div><div class="ttdeci">pj_status_t pjsip_inv_answer(pjsip_inv_session *inv, int st_code, const pj_str_t *st_text, const pjmedia_sdp_session *local_sdp, pjsip_tx_data **p_tdata)</div></div>
<div class="ttc" id="structpjsip__request__line_htm_ac3bb3248869a192554dda0b328a10e01"><div class="ttname"><a href="structpjsip__request__line.htm#ac3bb3248869a192554dda0b328a10e01">pjsip_request_line::method</a></div><div class="ttdeci">pjsip_method method</div><div class="ttdef"><b>Definition:</b> sip_msg.h:382</div></div>
<div class="ttc" id="group__PJSIP__INV_htm_gadd08039422a44bfcad8a9fc09f5d10f7"><div class="ttname"><a href="group__PJSIP__INV.htm#gadd08039422a44bfcad8a9fc09f5d10f7">pjsip_inv_terminate</a></div><div class="ttdeci">pj_status_t pjsip_inv_terminate(pjsip_inv_session *inv, int st_code, pj_bool_t notify)</div></div>
<div class="ttc" id="structpjsip__inv__session_htm_a135700970065ef7dc4c92d34ba0fa78a"><div class="ttname"><a href="structpjsip__inv__session.htm#a135700970065ef7dc4c92d34ba0fa78a">pjsip_inv_session::cause</a></div><div class="ttdeci">pjsip_status_code cause</div><div class="ttdef"><b>Definition:</b> sip_inv.h:426</div></div>
<div class="ttc" id="structpjsip__transaction_htm"><div class="ttname"><a href="structpjsip__transaction.htm">pjsip_transaction</a></div><div class="ttdef"><b>Definition:</b> sip_transaction.h:80</div></div>
<div class="ttc" id="group__PJSIP__EVENT_htm_gga887dd71c4680ebf9f85ec69fd87b8399a2d5c13b769452ce377081eca204f06f3"><div class="ttname"><a href="group__PJSIP__EVENT.htm#gga887dd71c4680ebf9f85ec69fd87b8399a2d5c13b769452ce377081eca204f06f3">PJSIP_EVENT_TSX_STATE</a></div><div class="ttdef"><b>Definition:</b> sip_event.h:61</div></div>
<div class="ttc" id="structpjsip__transaction_htm_a54b5b24b1724a9f2a479a9a7f25a406c"><div class="ttname"><a href="structpjsip__transaction.htm#a54b5b24b1724a9f2a479a9a7f25a406c">pjsip_transaction::status_code</a></div><div class="ttdeci">int status_code</div><div class="ttdef"><b>Definition:</b> sip_transaction.h:108</div></div>
<div class="ttc" id="group__PJSIP__MOD_htm_gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c"><div class="ttname"><a href="group__PJSIP__MOD.htm#gga45df6ed35a756f4f91e79dfc47a140baa1749148bf5d2874c1c14dbc09766101c">PJSIP_MOD_PRIORITY_APPLICATION</a></div><div class="ttdef"><b>Definition:</b> sip_module.h:211</div></div>
</div><!-- fragment --> </div></div><!-- contents -->
<p>&nbsp;</p>
<hr><center>
PJSIP Open Source, high performance, small footprint, and very very portable SIP stack<br>
Copyright (C) 2006-2008 Teluu Inc.
</center>
<!--#include virtual="/footer.html" -->
</BODY>
</HTML>
